// Copyright (c) Facebook, Inc. and its affiliates.
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

.source_language = "hack"

type cell = { value:int; next: *cell }

type list extends HackMixed = {}

type HackMixed = { header: *cell }

type HackString = { val: *string }

define hack_string(str: *string) : *HackMixed {
  #entry:
    n0 = __sil_allocate(<HackString>)
    n1: *string = load &str
    store n0.HackString.val <- n1 : *string
    ret n0
}

define bad(l: *list) : void {
  local temp : **list
  #entry:
    n0 = &l
    n1 = hack_string("header")
    n2 = $builtins.hack_dim_field_get(n0, n1)
    store n2 <- null: *cell
    n3: *list = load &l
    n4: *cell = load n3.HackMixed.header
    n5: *cell = load n4.cell.next
    ret null
}

define good(l: *list) : void {
  local temp : **list
  #entry:
    n0 = &l
    n1 = hack_string("header")
    n2 = $builtins.hack_dim_field_get(n0, n1)
    store n2 <- __sil_allocate(<cell>): *cell
    n3: *list = load &l
    n4: *cell = load n3.HackMixed.header
    n5: *cell = load n4.cell.next
    ret null
}

declare $builtins.hack_dim_field_get(**HackMixed, *HackMixed): **HackMixed
