digraph iCFG {
19 [label="19:  DeclStmt \n   DECLARE_LOCALS(&__objc_anonymous_block_BlockVar_navigateToURLInBackground______1); [line 19]\n  n$10=_fun___objc_alloc_no_fail(sizeof(class __objc_anonymous_block_BlockVar_navigateToURLInBackground______1 ):unsigned long ) [line 19]\n  *&__objc_anonymous_block_BlockVar_navigateToURLInBackground______1:class __objc_anonymous_block_BlockVar_navigateToURLInBackground______1 =n$10 [line 19]\n  *&addBlock:_fn_ (*)=(_fun___objc_anonymous_block_BlockVar_navigateToURLInBackground______1) [line 19]\n  REMOVE_TEMPS(n$10); [line 19]\n " shape="box"]
	

	 19 -> 13 ;
18 [label="18:  DeclStmt \n   *&error:class NSError *=0 [line 20]\n  NULLIFY(&error,false); [line 20]\n " shape="box"]
	

	 18 -> 17 ;
17 [label="17:  DeclStmt \n   n$9=_fun_BlockVar_test() [line 21]\n  *&res:int =n$9 [line 21]\n  REMOVE_TEMPS(n$9); [line 21]\n " shape="box"]
	

	 17 -> 16 ;
16 [label="16:  Return Stmt \n   n$6=*&a:int  [line 22]\n  n$7=*&b:int  [line 22]\n  n$8=*&res:int  [line 22]\n  *&return:int =((n$6 + n$7) + n$8) [line 22]\n  REMOVE_TEMPS(n$6,n$7,n$8); [line 22]\n  NULLIFY(&a,false); [line 22]\n  NULLIFY(&b,false); [line 22]\n  NULLIFY(&res,false); [line 22]\n  APPLY_ABSTRACTION; [line 22]\n " shape="box"]
	

	 16 -> 15 ;
15 [label="15: Exit __objc_anonymous_block_BlockVar_navigateToURLInBackground______1 \n  " color=yellow style=filled]
	

14 [label="14: Start __objc_anonymous_block_BlockVar_navigateToURLInBackground______1\nFormals:  a:int  b:int \nLocals:  res:int  error:class NSError * \n   DECLARE_LOCALS(&return,&res,&error); [line 19]\n  NULLIFY(&error,false); [line 19]\n  NULLIFY(&res,false); [line 19]\n " color=yellow style=filled]
	

	 14 -> 18 ;
13 [label="13:  DeclStmt \n   n$4=*&addBlock:_fn_ (*) [line 24]\n  n$5=n$4(1:int ,2:int ) [line 24]\n  *&x:int =n$5 [line 24]\n  REMOVE_TEMPS(n$4,n$5); [line 24]\n  NULLIFY(&addBlock,false); [line 24]\n " shape="box"]
	

	 13 -> 12 ;
12 [label="12:  DeclStmt \n   *&p:int *=0 [line 25]\n " shape="box"]
	

	 12 -> 7 ;
11 [label="11:  Return Stmt \n   NULLIFY(&p,false); [line 27]\n  n$3=*&x:int  [line 27]\n  *&return:int =n$3 [line 27]\n  REMOVE_TEMPS(n$3); [line 27]\n  NULLIFY(&__objc_anonymous_block_BlockVar_navigateToURLInBackground______1,true); [line 27]\n  NULLIFY(&x,false); [line 27]\n  APPLY_ABSTRACTION; [line 27]\n " shape="box"]
	

	 11 -> 5 ;
10 [label="10:  Return Stmt \n   NULLIFY(&x,false); [line 26]\n  n$1=*&p:int * [line 26]\n  n$2=*n$1:int  [line 26]\n  *&return:int =n$2 [line 26]\n  REMOVE_TEMPS(n$1,n$2); [line 26]\n  NULLIFY(&__objc_anonymous_block_BlockVar_navigateToURLInBackground______1,true); [line 26]\n  NULLIFY(&p,false); [line 26]\n  APPLY_ABSTRACTION; [line 26]\n " shape="box"]
	

	 10 -> 5 ;
9 [label="9: Prune (false branch) \n   PRUNE(((n$0 == 8) == 0), false); [line 26]\n  REMOVE_TEMPS(n$0); [line 26]\n " shape="invhouse"]
	

	 9 -> 11 ;
8 [label="8: Prune (true branch) \n   PRUNE(((n$0 == 8) != 0), true); [line 26]\n  REMOVE_TEMPS(n$0); [line 26]\n " shape="invhouse"]
	

	 8 -> 10 ;
7 [label="7:  BinaryOperatorStmt: EQ \n   n$0=*&x:int  [line 26]\n " shape="box"]
	

	 7 -> 8 ;
	 7 -> 9 ;
6 [label="6: + \n   NULLIFY(&__objc_anonymous_block_BlockVar_navigateToURLInBackground______1,true); [line 26]\n  NULLIFY(&addBlock,false); [line 26]\n  NULLIFY(&p,false); [line 26]\n  NULLIFY(&x,false); [line 26]\n " ]
	

	 6 -> 5 ;
5 [label="5: Exit BlockVar_navigateToURLInBackground \n  " color=yellow style=filled]
	

4 [label="4: Start BlockVar_navigateToURLInBackground\nFormals: \nLocals:  p:int * x:int  addBlock:_fn_ (*) \n   DECLARE_LOCALS(&return,&p,&x,&addBlock); [line 18]\n  NULLIFY(&addBlock,false); [line 18]\n  NULLIFY(&p,false); [line 18]\n  NULLIFY(&x,false); [line 18]\n " color=yellow style=filled]
	

	 4 -> 19 ;
3 [label="3:  Return Stmt \n   *&return:int =5 [line 15]\n  APPLY_ABSTRACTION; [line 15]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit BlockVar_test \n  " color=yellow style=filled]
	

1 [label="1: Start BlockVar_test\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 14]\n " color=yellow style=filled]
	

	 1 -> 3 ;
}
