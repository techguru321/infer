digraph iCFG {
28 [label="28:  DeclStmt \n   *&aWeakRef:class A __weak *=0 [line 22]\n " shape="box"]
	

	 28 -> 27 ;
27 [label="27:  DeclStmt \n   _fun___objc_retain(0:class A *) [line 23]\n  *&aStrongRef:class A *=0 [line 23]\n  NULLIFY(&aStrongRef,false); [line 23]\n " shape="box"]
	

	 27 -> 26 ;
26 [label="26:  DeclStmt \n   *&anUnsafeUnretRef:class A __unsafe_unretained *=0 [line 24]\n " shape="box"]
	

	 26 -> 25 ;
25 [label="25:  DeclStmt \n   _fun___objc_retain(0:class A __autoreleasing *) [line 25]\n  _fun___set_autorelease_attribute(0:class A __autoreleasing *) [line 25]\n  *&anAutoRelRef:class A __autoreleasing *=0 [line 25]\n " shape="box"]
	

	 25 -> 24 ;
24 [label="24:  DeclStmt \n   _fun___objc_retain(0:class A *) [line 26]\n  *&aStdRef:class A *=0 [line 26]\n " shape="box"]
	

	 24 -> 23 ;
23 [label="23:  BinaryOperatorStmt: Assign \n   n$9=_fun___objc_alloc_no_fail(sizeof(class A ):unsigned long ) [line 29]\n  *&aStrongRef:class A *=n$9 [line 29]\n  REMOVE_TEMPS(n$9); [line 29]\n " shape="box"]
	

	 23 -> 22 ;
22 [label="22:  BinaryOperatorStmt: Assign \n   n$7=*&aStrongRef:class A * [line 31]\n  _fun___objc_retain(n$7:class A *) [line 31]\n  n$8=*&aStdRef:class A * [line 31]\n  *&aStdRef:class A *=n$7 [line 31]\n  _fun___objc_release(n$8:class A *) [line 31]\n  REMOVE_TEMPS(n$7,n$8); [line 31]\n " shape="box"]
	

	 22 -> 21 ;
21 [label="21:  BinaryOperatorStmt: Assign \n   _fun___objc_retain(0:class A *) [line 33]\n  n$6=*&aStrongRef:class A * [line 33]\n  *&aStrongRef:class A *=0 [line 33]\n  _fun___objc_release(n$6:class A *) [line 33]\n  REMOVE_TEMPS(n$6); [line 33]\n  NULLIFY(&aStrongRef,false); [line 33]\n " shape="box"]
	

	 21 -> 20 ;
20 [label="20:  BinaryOperatorStmt: Assign \n   n$4=*&aStdRef:class A * [line 35]\n  _fun___objc_retain(n$4:class A *) [line 35]\n  n$5=*&aWeakRef:class A * [line 35]\n  *&aWeakRef:class A *=n$4 [line 35]\n  _fun___objc_release(n$5:class A *) [line 35]\n  REMOVE_TEMPS(n$4,n$5); [line 35]\n  NULLIFY(&aWeakRef,false); [line 35]\n " shape="box"]
	

	 20 -> 19 ;
19 [label="19:  BinaryOperatorStmt: Assign \n   n$2=*&aStdRef:class A * [line 37]\n  _fun___objc_retain(n$2:class A *) [line 37]\n  n$3=*&anAutoRelRef:class A * [line 37]\n  *&anAutoRelRef:class A *=n$2 [line 37]\n  _fun___objc_release(n$3:class A *) [line 37]\n  REMOVE_TEMPS(n$2,n$3); [line 37]\n  NULLIFY(&anAutoRelRef,false); [line 37]\n " shape="box"]
	

	 19 -> 18 ;
18 [label="18:  BinaryOperatorStmt: Assign \n   n$0=*&aStdRef:class A * [line 39]\n  _fun___objc_retain(n$0:class A *) [line 39]\n  n$1=*&anUnsafeUnretRef:class A * [line 39]\n  *&anUnsafeUnretRef:class A *=n$0 [line 39]\n  _fun___objc_release(n$1:class A *) [line 39]\n  REMOVE_TEMPS(n$0,n$1); [line 39]\n  NULLIFY(&aStdRef,false); [line 39]\n  NULLIFY(&anUnsafeUnretRef,false); [line 39]\n " shape="box"]
	

	 18 -> 17 ;
17 [label="17:  Return Stmt \n   *&return:int =0 [line 42]\n  APPLY_ABSTRACTION; [line 42]\n " shape="box"]
	

	 17 -> 16 ;
16 [label="16: Exit main \n  " color=yellow style=filled]
	

15 [label="15: Start main\nFormals: \nLocals:  aStdRef:class A * anAutoRelRef:class A __autoreleasing * anUnsafeUnretRef:class A __unsafe_unretained * aStrongRef:class A * aWeakRef:class A __weak * \n   DECLARE_LOCALS(&return,&aStdRef,&anAutoRelRef,&anUnsafeUnretRef,&aStrongRef,&aWeakRef); [line 20]\n  NULLIFY(&aStdRef,false); [line 20]\n  NULLIFY(&aStrongRef,false); [line 20]\n  NULLIFY(&aWeakRef,false); [line 20]\n  NULLIFY(&anAutoRelRef,false); [line 20]\n  NULLIFY(&anUnsafeUnretRef,false); [line 20]\n " color=yellow style=filled]
	

	 15 -> 28 ;
14 [label="14: Exit A_frontendChecks \n  " color=yellow style=filled]
	

13 [label="13: Start A_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 13 -> 14 ;
12 [label="12: Exit NSDiscardableContent_frontendChecks \n  " color=yellow style=filled]
	

11 [label="11: Start NSDiscardableContent_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 11 -> 12 ;
10 [label="10: Exit NSSecureCoding_frontendChecks \n  " color=yellow style=filled]
	

9 [label="9: Start NSSecureCoding_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 9 -> 10 ;
8 [label="8: Exit NSCoding_frontendChecks \n  " color=yellow style=filled]
	

7 [label="7: Start NSCoding_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 7 -> 8 ;
6 [label="6: Exit NSMutableCopying_frontendChecks \n  " color=yellow style=filled]
	

5 [label="5: Start NSMutableCopying_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 5 -> 6 ;
4 [label="4: Exit NSCopying_frontendChecks \n  " color=yellow style=filled]
	

3 [label="3: Start NSCopying_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 3 -> 4 ;
2 [label="2: Exit NSObject_frontendChecks \n  " color=yellow style=filled]
	

1 [label="1: Start NSObject_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 1 -> 2 ;
}
