digraph iCFG {
37 [label="37:  DeclStmt \n   *&size:int =0 [line 26]\n " shape="box"]
	

	 37 -> 36 ;
36 [label="36:  DeclStmt \n   *&item:class NSArray *=0 [line 27]\n  NULLIFY(&item,false); [line 27]\n  APPLY_ABSTRACTION; [line 27]\n " shape="box"]
	

	 36 -> 31 ;
35 [label="35:  BinaryOperatorStmt: AddAssign \n   n$13=*&item:class NSArray * [line 29]\n  n$14=_fun_NSArray_count(n$13:class NSArray *) [line 29]\n  n$15=*&size:int  [line 29]\n  *&size:int =(n$15 + n$14) [line 29]\n  REMOVE_TEMPS(n$13,n$14,n$15); [line 29]\n  NULLIFY(&item,false); [line 29]\n  APPLY_ABSTRACTION; [line 29]\n " shape="box"]
	

	 35 -> 31 ;
34 [label="34: Prune (false branch) \n   PRUNE((n$12 == 0), false); [line 28]\n  REMOVE_TEMPS(n$10,n$11,n$12); [line 28]\n " shape="invhouse"]
	

	 34 -> 30 ;
33 [label="33: Prune (true branch) \n   PRUNE((n$12 != 0), true); [line 28]\n  REMOVE_TEMPS(n$10,n$11,n$12); [line 28]\n " shape="invhouse"]
	

	 33 -> 35 ;
32 [label="32:  BinaryOperatorStmt: Assign \n   n$10=*&items:class NSArray * [line 28]\n  n$11=_fun_NSArray_nextObject(n$10:class NSArray *) virtual [line 28]\n  *&item:class NSArray *=n$11 [line 28]\n  n$12=*&item:class NSArray * [line 28]\n " shape="box"]
	

	 32 -> 33 ;
	 32 -> 34 ;
31 [label="31: + \n  " ]
	

	 31 -> 32 ;
30 [label="30:  Return Stmt \n   NULLIFY(&item,false); [line 31]\n  NULLIFY(&items,false); [line 31]\n  n$9=*&size:int  [line 31]\n  *&return:int =n$9 [line 31]\n  REMOVE_TEMPS(n$9); [line 31]\n  NULLIFY(&size,false); [line 31]\n  APPLY_ABSTRACTION; [line 31]\n " shape="box"]
	

	 30 -> 29 ;
29 [label="29: Exit A_while_loop: \n  " color=yellow style=filled]
	

28 [label="28: Start A_while_loop:\nFormals:  self:class A * items:class NSArray *\nLocals:  item:class NSArray * size:int  \n   DECLARE_LOCALS(&return,&item,&size); [line 25]\n  NULLIFY(&item,false); [line 25]\n  NULLIFY(&self,false); [line 25]\n  NULLIFY(&size,false); [line 25]\n " color=yellow style=filled]
	

	 28 -> 37 ;
27 [label="27:  DeclStmt \n   *&size:int =0 [line 18]\n " shape="box"]
	

	 27 -> 26 ;
26 [label="26:  BinaryOperatorStmt: Assign \n   n$7=*&items:class NSArray * [line 19]\n  n$8=_fun_NSArray_nextObject(n$7:class NSArray *) virtual [line 19]\n  *&item:class NSArray *=n$8 [line 19]\n  REMOVE_TEMPS(n$7,n$8); [line 19]\n  APPLY_ABSTRACTION; [line 19]\n " shape="box"]
	

	 26 -> 20 ;
25 [label="25:  BinaryOperatorStmt: AddAssign \n   n$4=*&item:class NSArray * [line 20]\n  n$5=_fun_NSArray_count(n$4:class NSArray *) [line 20]\n  n$6=*&size:int  [line 20]\n  *&size:int =(n$6 + n$5) [line 20]\n  REMOVE_TEMPS(n$4,n$5,n$6); [line 20]\n  NULLIFY(&item,false); [line 20]\n " shape="box"]
	

	 25 -> 24 ;
24 [label="24:  BinaryOperatorStmt: Assign \n   n$2=*&items:class NSArray * [line 19]\n  n$3=_fun_NSArray_nextObject(n$2:class NSArray *) virtual [line 19]\n  *&item:class NSArray *=n$3 [line 19]\n  REMOVE_TEMPS(n$2,n$3); [line 19]\n  APPLY_ABSTRACTION; [line 19]\n " shape="box"]
	

	 24 -> 20 ;
23 [label="23: Prune (false branch) \n   PRUNE(((n$1 != 0) == 0), false); [line 19]\n  REMOVE_TEMPS(n$1); [line 19]\n " shape="invhouse"]
	

	 23 -> 19 ;
22 [label="22: Prune (true branch) \n   PRUNE(((n$1 != 0) != 0), true); [line 19]\n  REMOVE_TEMPS(n$1); [line 19]\n " shape="invhouse"]
	

	 22 -> 25 ;
21 [label="21:  BinaryOperatorStmt: NE \n   n$1=*&item:class NSArray * [line 19]\n " shape="box"]
	

	 21 -> 22 ;
	 21 -> 23 ;
20 [label="20: + \n  " ]
	

	 20 -> 21 ;
19 [label="19:  Return Stmt \n   NULLIFY(&item,false); [line 22]\n  NULLIFY(&items,false); [line 22]\n  n$0=*&size:int  [line 22]\n  *&return:int =n$0 [line 22]\n  REMOVE_TEMPS(n$0); [line 22]\n  NULLIFY(&size,false); [line 22]\n  APPLY_ABSTRACTION; [line 22]\n " shape="box"]
	

	 19 -> 18 ;
18 [label="18: Exit A_fast_loop: \n  " color=yellow style=filled]
	

17 [label="17: Start A_fast_loop:\nFormals:  self:class A * items:class NSArray *\nLocals:  item:class NSArray * size:int  \n   DECLARE_LOCALS(&return,&item,&size); [line 17]\n  NULLIFY(&item,false); [line 17]\n  NULLIFY(&self,false); [line 17]\n  NULLIFY(&size,false); [line 17]\n " color=yellow style=filled]
	

	 17 -> 27 ;
16 [label="16: Exit A_frontendChecks \n  " color=yellow style=filled]
	

15 [label="15: Start A_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 15 -> 16 ;
14 [label="14: Exit NSFastEnumeration_frontendChecks \n  " color=yellow style=filled]
	

13 [label="13: Start NSFastEnumeration_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 13 -> 14 ;
12 [label="12: Exit NSDiscardableContent_frontendChecks \n  " color=yellow style=filled]
	

11 [label="11: Start NSDiscardableContent_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 11 -> 12 ;
10 [label="10: Exit NSSecureCoding_frontendChecks \n  " color=yellow style=filled]
	

9 [label="9: Start NSSecureCoding_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 9 -> 10 ;
8 [label="8: Exit NSCoding_frontendChecks \n  " color=yellow style=filled]
	

7 [label="7: Start NSCoding_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 7 -> 8 ;
6 [label="6: Exit NSMutableCopying_frontendChecks \n  " color=yellow style=filled]
	

5 [label="5: Start NSMutableCopying_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 5 -> 6 ;
4 [label="4: Exit NSCopying_frontendChecks \n  " color=yellow style=filled]
	

3 [label="3: Start NSCopying_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 3 -> 4 ;
2 [label="2: Exit NSObject_frontendChecks \n  " color=yellow style=filled]
	

1 [label="1: Start NSObject_frontendChecks\nFormals: \nLocals:  \n  " color=yellow style=filled]
	

	 1 -> 2 ;
}
