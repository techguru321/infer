digraph iCFG {
73 [label="73:  DeclStmt \n   n$59=_fun_malloc_no_fail(sizeof(int ):int ) [line 103]\n  *&x:int *=n$59 [line 103]\n  REMOVE_TEMPS(n$59); [line 103]\n " shape="box"]
	

	 73 -> 72 ;
72 [label="72:  BinaryOperatorStmt: Assign \n   n$58=*&x:int * [line 104]\n  *n$58:int =2 [line 104]\n  REMOVE_TEMPS(n$58); [line 104]\n " shape="box"]
	

	 72 -> 71 ;
71 [label="71:  DeclStmt \n   DECLARE_LOCALS(&__objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2); [line 105]\n  n$56=_fun___objc_alloc_no_fail(sizeof(class __objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2 ):unsigned long ) [line 105]\n  *&__objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2:class __objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2 =n$56 [line 105]\n  n$57=*&x:int * [line 105]\n  *n$56.x:int *=n$57 [line 105]\n  n$51=*&x:int * [line 105]\n  *&blk:_fn_ (*)=(_fun___objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2,n$51) [line 105]\n  REMOVE_TEMPS(n$56,n$57,n$51); [line 105]\n  NULLIFY(&x,false); [line 105]\n " shape="box"]
	

	 71 -> 65 ;
70 [label="70:  DeclStmt \n   n$54=*&x:int * [line 106]\n  n$55=*n$54:int  [line 106]\n  *&i:int =n$55 [line 106]\n  REMOVE_TEMPS(n$54,n$55); [line 106]\n " shape="box"]
	

	 70 -> 69 ;
69 [label="69:  Call _fun_free \n   n$53=*&x:int * [line 107]\n  _fun_free(n$53:void *) [line 107]\n  REMOVE_TEMPS(n$53); [line 107]\n  NULLIFY(&x,false); [line 107]\n " shape="box"]
	

	 69 -> 68 ;
68 [label="68:  Return Stmt \n   n$52=*&i:int  [line 108]\n  *&return:int =n$52 [line 108]\n  REMOVE_TEMPS(n$52); [line 108]\n  NULLIFY(&i,false); [line 108]\n  APPLY_ABSTRACTION; [line 108]\n " shape="box"]
	

	 68 -> 67 ;
67 [label="67: Exit __objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2 \n  " color=yellow style=filled]
	

66 [label="66: Start __objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2\nFormals:  x:int *\nLocals:  i:int \nCaptured:  x:int * \n   DECLARE_LOCALS(&return,&i); [line 105]\n  NULLIFY(&i,false); [line 105]\n " color=yellow style=filled]
	

	 66 -> 70 ;
65 [label="65:  Return Stmt \n   n$49=*&blk:_fn_ (*) [line 110]\n  n$50=n$49() [line 110]\n  *&return:int =n$50 [line 110]\n  REMOVE_TEMPS(n$49,n$50); [line 110]\n  NULLIFY(&__objc_anonymous_block_MemoryLeakExample_blockFreeNoLeakTODO______2,true); [line 110]\n  NULLIFY(&blk,false); [line 110]\n  APPLY_ABSTRACTION; [line 110]\n " shape="box"]
	

	 65 -> 64 ;
64 [label="64: Exit MemoryLeakExample_blockFreeNoLeakTODO \n  " color=yellow style=filled]
	

63 [label="63: Start MemoryLeakExample_blockFreeNoLeakTODO\nFormals:  self:class MemoryLeakExample *\nLocals:  blk:_fn_ (*) x:int * \n   DECLARE_LOCALS(&return,&blk,&x); [line 102]\n  NULLIFY(&blk,false); [line 102]\n  NULLIFY(&self,false); [line 102]\n  NULLIFY(&x,false); [line 102]\n " color=yellow style=filled]
	

	 63 -> 73 ;
62 [label="62:  DeclStmt \n   n$48=_fun_malloc_no_fail(sizeof(int ):int ) [line 94]\n  *&x:int *=n$48 [line 94]\n  REMOVE_TEMPS(n$48); [line 94]\n " shape="box"]
	

	 62 -> 61 ;
61 [label="61:  BinaryOperatorStmt: Assign \n   n$47=*&x:int * [line 95]\n  *n$47:int =2 [line 95]\n  REMOVE_TEMPS(n$47); [line 95]\n " shape="box"]
	

	 61 -> 60 ;
60 [label="60:  DeclStmt \n   DECLARE_LOCALS(&__objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1); [line 96]\n  n$45=_fun___objc_alloc_no_fail(sizeof(class __objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1 ):unsigned long ) [line 96]\n  *&__objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1:class __objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1 =n$45 [line 96]\n  n$46=*&x:int * [line 96]\n  *n$45.x:int *=n$46 [line 96]\n  n$42=*&x:int * [line 96]\n  *&blk:_fn_ (*)=(_fun___objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1,n$42) [line 96]\n  REMOVE_TEMPS(n$45,n$46,n$42); [line 96]\n  NULLIFY(&x,false); [line 96]\n " shape="box"]
	

	 60 -> 56 ;
59 [label="59:  Return Stmt \n   n$43=*&x:int * [line 97]\n  n$44=*n$43:int  [line 97]\n  *&return:int =n$44 [line 97]\n  REMOVE_TEMPS(n$43,n$44); [line 97]\n  NULLIFY(&x,false); [line 97]\n  APPLY_ABSTRACTION; [line 97]\n " shape="box"]
	

	 59 -> 58 ;
58 [label="58: Exit __objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1 \n  " color=yellow style=filled]
	

57 [label="57: Start __objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1\nFormals:  x:int *\nLocals: \nCaptured:  x:int * \n   DECLARE_LOCALS(&return); [line 96]\n " color=yellow style=filled]
	

	 57 -> 59 ;
56 [label="56:  Return Stmt \n   n$40=*&blk:_fn_ (*) [line 99]\n  n$41=n$40() [line 99]\n  *&return:int =n$41 [line 99]\n  REMOVE_TEMPS(n$40,n$41); [line 99]\n  NULLIFY(&__objc_anonymous_block_MemoryLeakExample_blockCapturedVarLeak______1,true); [line 99]\n  NULLIFY(&blk,false); [line 99]\n  APPLY_ABSTRACTION; [line 99]\n " shape="box"]
	

	 56 -> 55 ;
55 [label="55: Exit MemoryLeakExample_blockCapturedVarLeak \n  " color=yellow style=filled]
	

54 [label="54: Start MemoryLeakExample_blockCapturedVarLeak\nFormals:  self:class MemoryLeakExample *\nLocals:  blk:_fn_ (*) x:int * \n   DECLARE_LOCALS(&return,&blk,&x); [line 93]\n  NULLIFY(&blk,false); [line 93]\n  NULLIFY(&self,false); [line 93]\n  NULLIFY(&x,false); [line 93]\n " color=yellow style=filled]
	

	 54 -> 62 ;
53 [label="53:  DeclStmt \n   n$39=_fun_malloc_no_fail(sizeof(int ):int ) [line 88]\n  *&x:int *=n$39 [line 88]\n  REMOVE_TEMPS(n$39); [line 88]\n " shape="box"]
	

	 53 -> 52 ;
52 [label="52:  BinaryOperatorStmt: Assign \n   n$38=*&x:int * [line 89]\n  *n$38:int =7 [line 89]\n  REMOVE_TEMPS(n$38); [line 89]\n " shape="box"]
	

	 52 -> 51 ;
51 [label="51:  Return Stmt \n   n$36=*&x:int * [line 90]\n  n$37=*n$36:int  [line 90]\n  *&return:int =n$37 [line 90]\n  REMOVE_TEMPS(n$36,n$37); [line 90]\n  NULLIFY(&x,false); [line 90]\n  APPLY_ABSTRACTION; [line 90]\n " shape="box"]
	

	 51 -> 50 ;
50 [label="50: Exit MemoryLeakExample_regularLeak \n  " color=yellow style=filled]
	

49 [label="49: Start MemoryLeakExample_regularLeak\nFormals:  self:class MemoryLeakExample *\nLocals:  x:int * \n   DECLARE_LOCALS(&return,&x); [line 87]\n  NULLIFY(&self,false); [line 87]\n  NULLIFY(&x,false); [line 87]\n " color=yellow style=filled]
	

	 49 -> 53 ;
48 [label="48:  DeclStmt \n   n$35=_fun_FBColorCreateWithGray(0.000000:double ,0.300000:double ) [line 83]\n  *&borderColor:struct CGColor *=n$35 [line 83]\n  REMOVE_TEMPS(n$35); [line 83]\n " shape="box"]
	

	 48 -> 47 ;
47 [label="47:  Call _fun_CGColorRelease \n   n$34=*&borderColor:struct CGColor * [line 84]\n  _fun_CGColorRelease(n$34:struct CGColor *) [line 84]\n  REMOVE_TEMPS(n$34); [line 84]\n  NULLIFY(&borderColor,false); [line 84]\n  APPLY_ABSTRACTION; [line 84]\n " shape="box"]
	

	 47 -> 46 ;
46 [label="46: Exit MemoryLeakExample_testFBColorCreateWithGray \n  " color=yellow style=filled]
	

45 [label="45: Start MemoryLeakExample_testFBColorCreateWithGray\nFormals:  self:class MemoryLeakExample *\nLocals:  borderColor:struct CGColor * \n   DECLARE_LOCALS(&return,&borderColor); [line 82]\n  NULLIFY(&borderColor,false); [line 82]\n  NULLIFY(&self,false); [line 82]\n " color=yellow style=filled]
	

	 45 -> 48 ;
44 [label="44:  DeclStmt \n   n$33=_fun_CGBitmapContextCreateImage(0:struct CGContext *) [line 76]\n  *&newImage:struct CGImage *=n$33 [line 76]\n  REMOVE_TEMPS(n$33); [line 76]\n " shape="box"]
	

	 44 -> 43 ;
43 [label="43:  Call _fun_CGImageRelease \n   n$32=*&newImage:struct CGImage * [line 77]\n  _fun_CGImageRelease(n$32:struct CGImage *) [line 77]\n  REMOVE_TEMPS(n$32); [line 77]\n  NULLIFY(&newImage,false); [line 77]\n  APPLY_ABSTRACTION; [line 77]\n " shape="box"]
	

	 43 -> 42 ;
42 [label="42: Exit MemoryLeakExample_testImageRefRelease \n  " color=yellow style=filled]
	

41 [label="41: Start MemoryLeakExample_testImageRefRelease\nFormals: \nLocals:  newImage:struct CGImage * \n   DECLARE_LOCALS(&return,&newImage); [line 75]\n  NULLIFY(&newImage,false); [line 75]\n " color=yellow style=filled]
	

	 41 -> 44 ;
40 [label="40:  DeclStmt \n   n$31=_fun_SecTrustCopyPublicKey(0:struct __SecTrust *) [line 71]\n  *&allowedPublicKey:struct __SecKey *=n$31 [line 71]\n  REMOVE_TEMPS(n$31); [line 71]\n " shape="box"]
	

	 40 -> 39 ;
39 [label="39:  Call _fun___objc_release_cf \n   n$30=*&allowedPublicKey:struct __SecKey * [line 72]\n  _fun___objc_release_cf(1:_Bool ,n$30:void *) [line 72]\n  REMOVE_TEMPS(n$30); [line 72]\n  NULLIFY(&allowedPublicKey,false); [line 72]\n  APPLY_ABSTRACTION; [line 72]\n " shape="box"]
	

	 39 -> 38 ;
38 [label="38: Exit MemoryLeakExample_test2NoLeak \n  " color=yellow style=filled]
	

37 [label="37: Start MemoryLeakExample_test2NoLeak\nFormals: \nLocals:  allowedPublicKey:struct __SecKey * \n   DECLARE_LOCALS(&return,&allowedPublicKey); [line 70]\n  NULLIFY(&allowedPublicKey,false); [line 70]\n " color=yellow style=filled]
	

	 37 -> 40 ;
36 [label="36:  Call _fun_SecTrustCopyPublicKey \n   n$28=*&trust:struct __SecTrust * [line 67]\n  n$29=_fun_SecTrustCopyPublicKey(n$28:struct __SecTrust *) [line 67]\n  REMOVE_TEMPS(n$28,n$29); [line 67]\n  NULLIFY(&trust,false); [line 67]\n  APPLY_ABSTRACTION; [line 67]\n " shape="box"]
	

	 36 -> 35 ;
35 [label="35: Exit MemoryLeakExample_test2: \n  " color=yellow style=filled]
	

34 [label="34: Start MemoryLeakExample_test2:\nFormals:  trust:struct __SecTrust *\nLocals:  \n   DECLARE_LOCALS(&return); [line 66]\n " color=yellow style=filled]
	

	 34 -> 36 ;
33 [label="33:  DeclStmt \n   n$26=*&rect:struct CGRect  [line 59]\n  n$27=_fun_CGRectGetHeight(n$26:struct CGRect ) [line 59]\n  *&lineThickness:double =(0.200000 * n$27) [line 59]\n  REMOVE_TEMPS(n$26,n$27); [line 59]\n  NULLIFY(&rect,false); [line 59]\n  NULLIFY(&lineThickness,false); [line 59]\n " shape="box"]
	

	 33 -> 32 ;
32 [label="32:  DeclStmt \n   n$25=_fun___objc_alloc_no_fail(sizeof(struct CGPath ):unsigned long ,_fun_CGPathCreateMutable:void ) [line 62]\n  *&path1:struct CGPath *=n$25 [line 62]\n  REMOVE_TEMPS(n$25); [line 62]\n " shape="box"]
	

	 32 -> 31 ;
31 [label="31:  Call _fun___objc_release_cf \n   n$24=*&path1:struct CGPath * [line 63]\n  _fun___objc_release_cf(1:_Bool ,n$24:void *) [line 63]\n  REMOVE_TEMPS(n$24); [line 63]\n  NULLIFY(&path1,false); [line 63]\n  APPLY_ABSTRACTION; [line 63]\n " shape="box"]
	

	 31 -> 30 ;
30 [label="30: Exit MemoryLeakExample_createCloseCrossGlyphNoLeak: \n  " color=yellow style=filled]
	

29 [label="29: Start MemoryLeakExample_createCloseCrossGlyphNoLeak:\nFormals:  rect:struct CGRect \nLocals:  path1:struct CGPath * lineThickness:double  \n   DECLARE_LOCALS(&return,&path1,&lineThickness); [line 58]\n  NULLIFY(&lineThickness,false); [line 58]\n  NULLIFY(&path1,false); [line 58]\n " color=yellow style=filled]
	

	 29 -> 33 ;
28 [label="28:  BinaryOperatorStmt: Mul \n   n$22=*&rect:struct CGRect  [line 54]\n  n$23=_fun_CGRectGetHeight(n$22:struct CGRect ) [line 54]\n  REMOVE_TEMPS(n$22,n$23); [line 54]\n  NULLIFY(&rect,false); [line 54]\n " shape="box"]
	

	 28 -> 27 ;
27 [label="27:  Call alloc \n   n$21=_fun___objc_alloc_no_fail(sizeof(struct CGPath ):unsigned long ,_fun_CGPathCreateMutable:void ) [line 55]\n  REMOVE_TEMPS(n$21); [line 55]\n  APPLY_ABSTRACTION; [line 55]\n " shape="box"]
	

	 27 -> 26 ;
26 [label="26: Exit MemoryLeakExample_createCloseCrossGlyph: \n  " color=yellow style=filled]
	

25 [label="25: Start MemoryLeakExample_createCloseCrossGlyph:\nFormals:  rect:struct CGRect \nLocals:  \n   DECLARE_LOCALS(&return); [line 53]\n " color=yellow style=filled]
	

	 25 -> 28 ;
24 [label="24:  DeclStmt \n   n$20=_fun_CTFramesetterCreateWithAttributedString(0:struct __CFAttributedString *) [line 49]\n  *&framesetter:struct __CTFramesetter *=n$20 [line 49]\n  REMOVE_TEMPS(n$20); [line 49]\n " shape="box"]
	

	 24 -> 23 ;
23 [label="23:  Call _fun___objc_release_cf \n   n$19=*&framesetter:struct __CTFramesetter * [line 50]\n  _fun___objc_release_cf(1:_Bool ,n$19:void *) [line 50]\n  REMOVE_TEMPS(n$19); [line 50]\n  NULLIFY(&framesetter,false); [line 50]\n  APPLY_ABSTRACTION; [line 50]\n " shape="box"]
	

	 23 -> 22 ;
22 [label="22: Exit MemoryLeakExample_test1NoLeak \n  " color=yellow style=filled]
	

21 [label="21: Start MemoryLeakExample_test1NoLeak\nFormals: \nLocals:  framesetter:struct __CTFramesetter * \n   DECLARE_LOCALS(&return,&framesetter); [line 48]\n  NULLIFY(&framesetter,false); [line 48]\n " color=yellow style=filled]
	

	 21 -> 24 ;
20 [label="20:  Call _fun_CTFramesetterCreateWithAttributedString \n   n$17=*&str:struct __CFAttributedString * [line 45]\n  n$18=_fun_CTFramesetterCreateWithAttributedString(n$17:struct __CFAttributedString *) [line 45]\n  REMOVE_TEMPS(n$17,n$18); [line 45]\n  NULLIFY(&str,false); [line 45]\n  APPLY_ABSTRACTION; [line 45]\n " shape="box"]
	

	 20 -> 19 ;
19 [label="19: Exit MemoryLeakExample_test1: \n  " color=yellow style=filled]
	

18 [label="18: Start MemoryLeakExample_test1:\nFormals:  str:struct __CFAttributedString *\nLocals:  \n   DECLARE_LOCALS(&return); [line 44]\n " color=yellow style=filled]
	

	 18 -> 20 ;
17 [label="17:  DeclStmt \n   n$16=_fun___objc_alloc_no_fail(sizeof(struct __CFAttributedString ):unsigned long ,_fun_CFAttributedStringCreateMutable:void ) [line 40]\n  *&maString:struct __CFAttributedString *=n$16 [line 39]\n  REMOVE_TEMPS(n$16); [line 39]\n " shape="box"]
	

	 17 -> 16 ;
16 [label="16:  Call _fun___objc_release_cf \n   n$15=*&maString:struct __CFAttributedString * [line 41]\n  _fun___objc_release_cf(1:_Bool ,n$15:void *) [line 41]\n  REMOVE_TEMPS(n$15); [line 41]\n  NULLIFY(&maString,false); [line 41]\n  APPLY_ABSTRACTION; [line 41]\n " shape="box"]
	

	 16 -> 15 ;
15 [label="15: Exit MemoryLeakExample_measureFrameSizeForTextNoLeak \n  " color=yellow style=filled]
	

14 [label="14: Start MemoryLeakExample_measureFrameSizeForTextNoLeak\nFormals: \nLocals:  maString:struct __CFAttributedString * \n   DECLARE_LOCALS(&return,&maString); [line 38]\n  NULLIFY(&maString,false); [line 38]\n " color=yellow style=filled]
	

	 14 -> 17 ;
13 [label="13:  Call alloc \n   n$14=_fun___objc_alloc_no_fail(sizeof(struct __CFAttributedString ):unsigned long ,_fun_CFAttributedStringCreateMutable:void ) [line 35]\n  REMOVE_TEMPS(n$14); [line 35]\n  APPLY_ABSTRACTION; [line 35]\n " shape="box"]
	

	 13 -> 12 ;
12 [label="12: Exit MemoryLeakExample_measureFrameSizeForText \n  " color=yellow style=filled]
	

11 [label="11: Start MemoryLeakExample_measureFrameSizeForText\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 34]\n " color=yellow style=filled]
	

	 11 -> 13 ;
10 [label="10:  DeclStmt \n   n$13=_fun___objc_alloc_no_fail(sizeof(struct CGPath ):unsigned long ,_fun_CGPathCreateWithRect:void ) [line 30]\n  *&shadowPath:struct CGPath *=n$13 [line 29]\n  REMOVE_TEMPS(n$13); [line 29]\n " shape="box"]
	

	 10 -> 9 ;
9 [label="9:  Message Call: setShadowPath: \n   n$6=*&self:class MemoryLeakExample * [line 31]\n  n$7=_fun_MemoryLeakExample_backgroundCoveringView(n$6:class MemoryLeakExample *) [line 31]\n  n$8=_fun_UIView_layer(n$7:class UIView *) [line 31]\n  n$9=*&shadowPath:struct CGPath * [line 31]\n  _fun_CALayer_setShadowPath:(n$8:class CALayer *,n$9:struct CGPath *) [line 31]\n  REMOVE_TEMPS(n$6,n$7,n$8,n$9); [line 31]\n  NULLIFY(&self,false); [line 31]\n  NULLIFY(&shadowPath,false); [line 31]\n  APPLY_ABSTRACTION; [line 31]\n " shape="box"]
	

	 9 -> 8 ;
8 [label="8: Exit MemoryLeakExample_test \n  " color=yellow style=filled]
	

7 [label="7: Start MemoryLeakExample_test\nFormals:  self:class MemoryLeakExample *\nLocals:  shadowPath:struct CGPath * \n   DECLARE_LOCALS(&return,&shadowPath); [line 28]\n  NULLIFY(&shadowPath,false); [line 28]\n " color=yellow style=filled]
	

	 7 -> 10 ;
6 [label="6:  DeclStmt \n   n$5=_fun___objc_alloc_no_fail(sizeof(class UIView ):unsigned long ) [line 20]\n  *&attachmentContainerView:class UIView *=n$5 [line 20]\n  REMOVE_TEMPS(n$5); [line 20]\n " shape="box"]
	

	 6 -> 5 ;
5 [label="5:  DeclStmt \n   n$4=_fun___objc_alloc_no_fail(sizeof(struct CGPath ):unsigned long ,_fun_CGPathCreateWithRect:void ) [line 22]\n  *&shadowPath:struct CGPath *=n$4 [line 21]\n  REMOVE_TEMPS(n$4); [line 21]\n " shape="box"]
	

	 5 -> 4 ;
4 [label="4:  Call _fun_CGPathRelease \n   n$1=*&shadowPath:struct CGPath * [line 24]\n  _fun_CGPathRelease(n$1:struct CGPath *) [line 24]\n  REMOVE_TEMPS(n$1); [line 24]\n  NULLIFY(&shadowPath,false); [line 24]\n " shape="box"]
	

	 4 -> 3 ;
3 [label="3:  Message Call: release \n   n$0=*&attachmentContainerView:class UIView * [line 25]\n  _fun___objc_release(n$0:class UIView *) [line 25]\n  REMOVE_TEMPS(n$0); [line 25]\n  NULLIFY(&attachmentContainerView,false); [line 25]\n  APPLY_ABSTRACTION; [line 25]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit MemoryLeakExample_layoutSubviews \n  " color=yellow style=filled]
	

1 [label="1: Start MemoryLeakExample_layoutSubviews\nFormals:  self:class MemoryLeakExample *\nLocals:  shadowPath:struct CGPath * attachmentContainerView:class UIView * \n   DECLARE_LOCALS(&return,&shadowPath,&attachmentContainerView); [line 19]\n  NULLIFY(&attachmentContainerView,false); [line 19]\n  NULLIFY(&self,false); [line 19]\n  NULLIFY(&shadowPath,false); [line 19]\n " color=yellow style=filled]
	

	 1 -> 6 ;
}
