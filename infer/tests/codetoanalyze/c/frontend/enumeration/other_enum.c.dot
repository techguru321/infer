/* @generated */
digraph iCFG {
"other_enum_test11" [label="11:  DeclStmt \n   *&foo_g:int =(2 + 10) [line 23]\n " shape="box"]
	

	 "other_enum_test11" -> "other_enum_test10" ;
"other_enum_test10" [label="10:  DeclStmt \n   *&foo_a:int =0 [line 24]\n " shape="box"]
	

	 "other_enum_test10" -> "other_enum_test5" ;
"other_enum_test9" [label="9:  Return Stmt \n   *&return:int =0 [line 28]\n " shape="box"]
	

	 "other_enum_test9" -> "other_enum_test2" ;
"other_enum_test8" [label="8:  Return Stmt \n   n$1=*&foo_g:int  [line 26]\n  n$2=*&foo_a:int  [line 26]\n  *&return:int =(n$1 / n$2) [line 26]\n " shape="box"]
	

	 "other_enum_test8" -> "other_enum_test2" ;
"other_enum_test7" [label="7: Prune (false branch) \n   PRUNE(((n$0 == 12) == 0), false); [line 25]\n " shape="invhouse"]
	

	 "other_enum_test7" -> "other_enum_test9" ;
"other_enum_test6" [label="6: Prune (true branch) \n   PRUNE(((n$0 == 12) != 0), true); [line 25]\n " shape="invhouse"]
	

	 "other_enum_test6" -> "other_enum_test8" ;
"other_enum_test5" [label="5:  BinaryOperatorStmt: EQ \n   n$0=*&foo_g:int  [line 25]\n " shape="box"]
	

	 "other_enum_test5" -> "other_enum_test6" ;
	 "other_enum_test5" -> "other_enum_test7" ;
"other_enum_test4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "other_enum_test4" -> "other_enum_test2" ;
"other_enum_test3" [label="3: + \n  " ]
	

	 "other_enum_test3" -> "other_enum_test4" ;
"other_enum_test2" [label="2: Exit other_enum_test \n  " color=yellow style=filled]
	

"other_enum_test1" [label="1: Start other_enum_test\nFormals: \nLocals:  foo_a:int  foo_g:int  \n   DECLARE_LOCALS(&return,&foo_a,&foo_g); [line 22]\n " color=yellow style=filled]
	

	 "other_enum_test1" -> "other_enum_test11" ;
"other_enum_main9" [label="9:  DeclStmt \n   *&foo_a:int =0 [line 13]\n " shape="box"]
	

	 "other_enum_main9" -> "other_enum_main8" ;
"other_enum_main8" [label="8:  DeclStmt \n   *&foo_b:int =1 [line 14]\n " shape="box"]
	

	 "other_enum_main8" -> "other_enum_main7" ;
"other_enum_main7" [label="7:  DeclStmt \n   *&foo_c:int =10 [line 15]\n " shape="box"]
	

	 "other_enum_main7" -> "other_enum_main6" ;
"other_enum_main6" [label="6:  DeclStmt \n   *&foo_d:int =11 [line 16]\n " shape="box"]
	

	 "other_enum_main6" -> "other_enum_main5" ;
"other_enum_main5" [label="5:  DeclStmt \n   *&foo_e:int =1 [line 17]\n " shape="box"]
	

	 "other_enum_main5" -> "other_enum_main4" ;
"other_enum_main4" [label="4:  DeclStmt \n   *&foo_f:int =2 [line 18]\n " shape="box"]
	

	 "other_enum_main4" -> "other_enum_main3" ;
"other_enum_main3" [label="3:  DeclStmt \n   *&foo_g:int =(2 + 10) [line 19]\n " shape="box"]
	

	 "other_enum_main3" -> "other_enum_main2" ;
"other_enum_main2" [label="2: Exit other_enum_main \n  " color=yellow style=filled]
	

"other_enum_main1" [label="1: Start other_enum_main\nFormals: \nLocals:  foo_g:int  foo_f:int  foo_e:int  foo_d:int  foo_c:int  foo_b:int  foo_a:int  \n   DECLARE_LOCALS(&return,&foo_g,&foo_f,&foo_e,&foo_d,&foo_c,&foo_b,&foo_a); [line 12]\n " color=yellow style=filled]
	

	 "other_enum_main1" -> "other_enum_main9" ;
}
