/* @generated */
digraph iCFG {
"neg8" [label="8:  Return Stmt \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int  [line 29]\n  *&return:int =n$2 [line 29]\n " shape="box"]
	

	 "neg8" -> "neg2" ;
"neg7" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =1 [line 29]\n " shape="box"]
	

	 "neg7" -> "neg3" ;
"neg6" [label="6:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =0 [line 29]\n " shape="box"]
	

	 "neg6" -> "neg3" ;
"neg5" [label="5: Prune (false branch) \n   n$1=*&x:int  [line 29]\n  PRUNE((n$1 == 0), false); [line 29]\n " shape="invhouse"]
	

	 "neg5" -> "neg7" ;
"neg4" [label="4: Prune (true branch) \n   n$1=*&x:int  [line 29]\n  PRUNE((n$1 != 0), true); [line 29]\n " shape="invhouse"]
	

	 "neg4" -> "neg6" ;
"neg3" [label="3: + \n  " ]
	

	 "neg3" -> "neg8" ;
"neg2" [label="2: Exit neg \n  " color=yellow style=filled]
	

"neg1" [label="1: Start neg\nFormals:  x:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0); [line 29]\n " color=yellow style=filled]
	

	 "neg1" -> "neg4" ;
	 "neg1" -> "neg5" ;
"baz14" [label="14:  Return Stmt \n   *&return:int =0 [line 25]\n " shape="box"]
	

	 "baz14" -> "baz2" ;
"baz13" [label="13:  Return Stmt \n   *&return:int =1 [line 23]\n " shape="box"]
	

	 "baz13" -> "baz2" ;
"baz12" [label="12: Prune (false branch) \n   PRUNE((n$3 == 0), false); [line 22]\n " shape="invhouse"]
	

	 "baz12" -> "baz14" ;
"baz11" [label="11: Prune (true branch) \n   PRUNE((n$3 != 0), true); [line 22]\n " shape="invhouse"]
	

	 "baz11" -> "baz13" ;
"baz10" [label="10:  Call _fun_identity \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int  [line 22]\n  n$3=_fun_identity(n$2:int ) [line 22]\n " shape="box"]
	

	 "baz10" -> "baz11" ;
	 "baz10" -> "baz12" ;
"baz9" [label="9:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =1 [line 22]\n " shape="box"]
	

	 "baz9" -> "baz5" ;
"baz8" [label="8:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =0 [line 22]\n " shape="box"]
	

	 "baz8" -> "baz5" ;
"baz7" [label="7: Prune (false branch) \n   n$1=*&x:int  [line 22]\n  PRUNE((n$1 == 0), false); [line 22]\n " shape="invhouse"]
	

	 "baz7" -> "baz9" ;
"baz6" [label="6: Prune (true branch) \n   n$1=*&x:int  [line 22]\n  PRUNE((n$1 != 0), true); [line 22]\n " shape="invhouse"]
	

	 "baz6" -> "baz8" ;
"baz5" [label="5: + \n  " ]
	

	 "baz5" -> "baz10" ;
"baz4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "baz4" -> "baz2" ;
"baz3" [label="3: + \n  " ]
	

	 "baz3" -> "baz4" ;
"baz2" [label="2: Exit baz \n  " color=yellow style=filled]
	

"baz1" [label="1: Start baz\nFormals:  x:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0); [line 20]\n " color=yellow style=filled]
	

	 "baz1" -> "baz6" ;
	 "baz1" -> "baz7" ;
"identity3" [label="3:  Return Stmt \n   n$0=*&x:int  [line 10]\n  *&return:int =n$0 [line 10]\n " shape="box"]
	

	 "identity3" -> "identity2" ;
"identity2" [label="2: Exit identity \n  " color=yellow style=filled]
	

"identity1" [label="1: Start identity\nFormals:  x:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 10]\n " color=yellow style=filled]
	

	 "identity1" -> "identity3" ;
"bar9" [label="9:  Return Stmt \n   *&return:int =0 [line 16]\n " shape="box"]
	

	 "bar9" -> "bar2" ;
"bar8" [label="8:  Return Stmt \n   *&return:int =1 [line 14]\n " shape="box"]
	

	 "bar8" -> "bar2" ;
"bar7" [label="7: Prune (false branch) \n   PRUNE((n$1 == 0), false); [line 13]\n " shape="invhouse"]
	

	 "bar7" -> "bar9" ;
"bar6" [label="6: Prune (true branch) \n   PRUNE((n$1 != 0), true); [line 13]\n " shape="invhouse"]
	

	 "bar6" -> "bar8" ;
"bar5" [label="5:  Call _fun_identity \n   n$0=*&x:int  [line 13]\n  n$1=_fun_identity(n$0:int ) [line 13]\n " shape="box"]
	

	 "bar5" -> "bar6" ;
	 "bar5" -> "bar7" ;
"bar4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "bar4" -> "bar2" ;
"bar3" [label="3: + \n  " ]
	

	 "bar3" -> "bar4" ;
"bar2" [label="2: Exit bar \n  " color=yellow style=filled]
	

"bar1" [label="1: Start bar\nFormals:  x:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 "bar1" -> "bar5" ;
}
