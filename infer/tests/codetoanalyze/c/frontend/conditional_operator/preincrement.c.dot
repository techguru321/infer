/* @generated */
digraph iCFG {
"preincrement26" [label="26:  BinaryOperatorStmt: AddAssign \n   n$16=*&p:struct s * [line 15]\n  n$17=*n$16.x:int  [line 15]\n  *n$16.x:int =(n$17 + 1) [line 15]\n " shape="box"]
	

	 "preincrement26" -> "preincrement21" ;
	 "preincrement26" -> "preincrement22" ;
"preincrement25" [label="25:  BinaryOperatorStmt: AddAssign \n   n$14=*&0$?%__sil_tmpSIL_temp_conditional___n$11:struct s * [line 16]\n  n$15=*n$14.x:int  [line 16]\n  *n$14.x:int =(n$15 + 1) [line 16]\n " shape="box"]
	

	 "preincrement25" -> "preincrement15" ;
	 "preincrement25" -> "preincrement16" ;
"preincrement24" [label="24:  ConditinalStmt Branch \n   n$13=*&p:struct s * [line 16]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$11:struct s *=n$13 [line 16]\n " shape="box"]
	

	 "preincrement24" -> "preincrement20" ;
"preincrement23" [label="23:  ConditinalStmt Branch \n   n$12=*&p:struct s * [line 16]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$11:struct s *=n$12 [line 16]\n " shape="box"]
	

	 "preincrement23" -> "preincrement20" ;
"preincrement22" [label="22: Prune (false branch) \n   PRUNE((1 == 0), false); [line 16]\n " shape="invhouse"]
	

	 "preincrement22" -> "preincrement24" ;
"preincrement21" [label="21: Prune (true branch) \n   PRUNE((1 != 0), true); [line 16]\n " shape="invhouse"]
	

	 "preincrement21" -> "preincrement23" ;
"preincrement20" [label="20: + \n  " ]
	

	 "preincrement20" -> "preincrement25" ;
"preincrement19" [label="19:  BinaryOperatorStmt: AddAssign \n   n$7=*&p:struct s * [line 17]\n  n$9=*&0$?%__sil_tmpSIL_temp_conditional___n$8:int  [line 17]\n  n$10=*n$7.x:int  [line 17]\n  *n$7.x:int =(n$10 + n$9) [line 17]\n " shape="box"]
	

	 "preincrement19" -> "preincrement4" ;
	 "preincrement19" -> "preincrement5" ;
"preincrement18" [label="18:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$8:int =7 [line 17]\n " shape="box"]
	

	 "preincrement18" -> "preincrement14" ;
"preincrement17" [label="17:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$8:int =3 [line 17]\n " shape="box"]
	

	 "preincrement17" -> "preincrement14" ;
"preincrement16" [label="16: Prune (false branch) \n   PRUNE((1 == 0), false); [line 17]\n " shape="invhouse"]
	

	 "preincrement16" -> "preincrement18" ;
"preincrement15" [label="15: Prune (true branch) \n   PRUNE((1 != 0), true); [line 17]\n " shape="invhouse"]
	

	 "preincrement15" -> "preincrement17" ;
"preincrement14" [label="14: + \n  " ]
	

	 "preincrement14" -> "preincrement19" ;
"preincrement13" [label="13:  BinaryOperatorStmt: AddAssign \n   n$3=*&0$?%__sil_tmpSIL_temp_conditional___n$0:struct s * [line 18]\n  n$5=*&0$?%__sil_tmpSIL_temp_conditional___n$4:int  [line 18]\n  n$6=*n$3.x:int  [line 18]\n  *n$3.x:int =(n$6 + n$5) [line 18]\n " shape="box"]
	

	 "preincrement13" -> "preincrement2" ;
"preincrement12" [label="12:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$4:int =7 [line 18]\n " shape="box"]
	

	 "preincrement12" -> "preincrement8" ;
"preincrement11" [label="11:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$4:int =3 [line 18]\n " shape="box"]
	

	 "preincrement11" -> "preincrement8" ;
"preincrement10" [label="10: Prune (false branch) \n   PRUNE((1 == 0), false); [line 18]\n " shape="invhouse"]
	

	 "preincrement10" -> "preincrement12" ;
"preincrement9" [label="9: Prune (true branch) \n   PRUNE((1 != 0), true); [line 18]\n " shape="invhouse"]
	

	 "preincrement9" -> "preincrement11" ;
"preincrement8" [label="8: + \n  " ]
	

	 "preincrement8" -> "preincrement13" ;
"preincrement7" [label="7:  ConditinalStmt Branch \n   n$2=*&p:struct s * [line 18]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$0:struct s *=n$2 [line 18]\n " shape="box"]
	

	 "preincrement7" -> "preincrement3" ;
"preincrement6" [label="6:  ConditinalStmt Branch \n   n$1=*&p:struct s * [line 18]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$0:struct s *=n$1 [line 18]\n " shape="box"]
	

	 "preincrement6" -> "preincrement3" ;
"preincrement5" [label="5: Prune (false branch) \n   PRUNE((1 == 0), false); [line 18]\n " shape="invhouse"]
	

	 "preincrement5" -> "preincrement7" ;
"preincrement4" [label="4: Prune (true branch) \n   PRUNE((1 != 0), true); [line 18]\n " shape="invhouse"]
	

	 "preincrement4" -> "preincrement6" ;
"preincrement3" [label="3: + \n  " ]
	

	 "preincrement3" -> "preincrement9" ;
	 "preincrement3" -> "preincrement10" ;
"preincrement2" [label="2: Exit preincrement \n  " color=yellow style=filled]
	

"preincrement1" [label="1: Start preincrement\nFormals:  p:struct s *\nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:struct s * 0$?%__sil_tmpSIL_temp_conditional___n$4:int  0$?%__sil_tmpSIL_temp_conditional___n$8:int  0$?%__sil_tmpSIL_temp_conditional___n$11:struct s * \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0,&0$?%__sil_tmpSIL_temp_conditional___n$4,&0$?%__sil_tmpSIL_temp_conditional___n$8,&0$?%__sil_tmpSIL_temp_conditional___n$11); [line 14]\n " color=yellow style=filled]
	

	 "preincrement1" -> "preincrement26" ;
}
