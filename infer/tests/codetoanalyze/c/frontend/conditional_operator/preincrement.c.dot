digraph iCFG {
26 [label="26:  ComppoundAssignStmt \n   n$12=*&p:struct s * [line 15]\n  n$13=*n$12.x:int  [line 15]\n  *n$12.x:int =(n$13 + 1) [line 15]\n  REMOVE_TEMPS(n$12,n$13); [line 15]\n " shape="box"]
	

	 26 -> 21 ;
	 26 -> 22 ;
25 [label="25:  ComppoundAssignStmt \n   n$10=*&SIL_temp_conditional___20:struct s * [line 16]\n  NULLIFY(&SIL_temp_conditional___20,true); [line 16]\n  n$11=*n$10.x:int  [line 16]\n  *n$10.x:int =(n$11 + 1) [line 16]\n  REMOVE_TEMPS(n$10,n$11); [line 16]\n " shape="box"]
	

	 25 -> 15 ;
	 25 -> 16 ;
24 [label="24:  ConditinalStmt Branch \n   n$9=*&p:struct s * [line 16]\n  DECLARE_LOCALS(&SIL_temp_conditional___20); [line 16]\n  *&SIL_temp_conditional___20:struct s *=n$9 [line 16]\n  REMOVE_TEMPS(n$9); [line 16]\n  APPLY_ABSTRACTION; [line 16]\n " shape="box"]
	

	 24 -> 20 ;
23 [label="23:  ConditinalStmt Branch \n   n$8=*&p:struct s * [line 16]\n  DECLARE_LOCALS(&SIL_temp_conditional___20); [line 16]\n  *&SIL_temp_conditional___20:struct s *=n$8 [line 16]\n  REMOVE_TEMPS(n$8); [line 16]\n  APPLY_ABSTRACTION; [line 16]\n " shape="box"]
	

	 23 -> 20 ;
22 [label="22: Prune (false branch) \n   PRUNE((1 == 0), false); [line 16]\n " shape="invhouse"]
	

	 22 -> 24 ;
21 [label="21: Prune (true branch) \n   PRUNE((1 != 0), true); [line 16]\n " shape="invhouse"]
	

	 21 -> 23 ;
20 [label="20: + \n  " ]
	

	 20 -> 25 ;
19 [label="19:  ComppoundAssignStmt \n   n$5=*&p:struct s * [line 17]\n  n$6=*&SIL_temp_conditional___14:int  [line 17]\n  NULLIFY(&SIL_temp_conditional___14,true); [line 17]\n  n$7=*n$5.x:int  [line 17]\n  *n$5.x:int =(n$7 + n$6) [line 17]\n  REMOVE_TEMPS(n$5,n$6,n$7); [line 17]\n " shape="box"]
	

	 19 -> 4 ;
	 19 -> 5 ;
18 [label="18:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___14); [line 17]\n  *&SIL_temp_conditional___14:int =7 [line 17]\n  APPLY_ABSTRACTION; [line 17]\n " shape="box"]
	

	 18 -> 14 ;
17 [label="17:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___14); [line 17]\n  *&SIL_temp_conditional___14:int =3 [line 17]\n  APPLY_ABSTRACTION; [line 17]\n " shape="box"]
	

	 17 -> 14 ;
16 [label="16: Prune (false branch) \n   PRUNE((1 == 0), false); [line 17]\n " shape="invhouse"]
	

	 16 -> 18 ;
15 [label="15: Prune (true branch) \n   PRUNE((1 != 0), true); [line 17]\n " shape="invhouse"]
	

	 15 -> 17 ;
14 [label="14: + \n  " ]
	

	 14 -> 19 ;
13 [label="13:  ComppoundAssignStmt \n   n$2=*&SIL_temp_conditional___3:struct s * [line 18]\n  NULLIFY(&SIL_temp_conditional___3,true); [line 18]\n  n$3=*&SIL_temp_conditional___8:int  [line 18]\n  NULLIFY(&SIL_temp_conditional___8,true); [line 18]\n  n$4=*n$2.x:int  [line 18]\n  *n$2.x:int =(n$4 + n$3) [line 18]\n  REMOVE_TEMPS(n$2,n$3,n$4); [line 18]\n  APPLY_ABSTRACTION; [line 18]\n " shape="box"]
	

	 13 -> 2 ;
12 [label="12:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___8); [line 18]\n  *&SIL_temp_conditional___8:int =7 [line 18]\n  APPLY_ABSTRACTION; [line 18]\n " shape="box"]
	

	 12 -> 8 ;
11 [label="11:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___8); [line 18]\n  *&SIL_temp_conditional___8:int =3 [line 18]\n  APPLY_ABSTRACTION; [line 18]\n " shape="box"]
	

	 11 -> 8 ;
10 [label="10: Prune (false branch) \n   PRUNE((1 == 0), false); [line 18]\n " shape="invhouse"]
	

	 10 -> 12 ;
9 [label="9: Prune (true branch) \n   PRUNE((1 != 0), true); [line 18]\n " shape="invhouse"]
	

	 9 -> 11 ;
8 [label="8: + \n  " ]
	

	 8 -> 13 ;
7 [label="7:  ConditinalStmt Branch \n   n$1=*&p:struct s * [line 18]\n  DECLARE_LOCALS(&SIL_temp_conditional___3); [line 18]\n  *&SIL_temp_conditional___3:struct s *=n$1 [line 18]\n  REMOVE_TEMPS(n$1); [line 18]\n  NULLIFY(&p,false); [line 18]\n  APPLY_ABSTRACTION; [line 18]\n " shape="box"]
	

	 7 -> 3 ;
6 [label="6:  ConditinalStmt Branch \n   n$0=*&p:struct s * [line 18]\n  DECLARE_LOCALS(&SIL_temp_conditional___3); [line 18]\n  *&SIL_temp_conditional___3:struct s *=n$0 [line 18]\n  REMOVE_TEMPS(n$0); [line 18]\n  NULLIFY(&p,false); [line 18]\n  APPLY_ABSTRACTION; [line 18]\n " shape="box"]
	

	 6 -> 3 ;
5 [label="5: Prune (false branch) \n   PRUNE((1 == 0), false); [line 18]\n " shape="invhouse"]
	

	 5 -> 7 ;
4 [label="4: Prune (true branch) \n   PRUNE((1 != 0), true); [line 18]\n " shape="invhouse"]
	

	 4 -> 6 ;
3 [label="3: + \n  " ]
	

	 3 -> 9 ;
	 3 -> 10 ;
2 [label="2: Exit preincrement \n  " color=yellow style=filled]
	

1 [label="1: Start preincrement\nFormals:  p:struct s *\nLocals:  \n   DECLARE_LOCALS(&return); [line 14]\n " color=yellow style=filled]
	

	 1 -> 26 ;
}
