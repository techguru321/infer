digraph iCFG {
57 [label="57:  BinaryOperatorStmt: Assign \n   n$14=*&SIL_temp_conditional___51:int  [line 23]\n  NULLIFY(&SIL_temp_conditional___51,true); [line 23]\n  *&y:int =n$14 [line 23]\n  REMOVE_TEMPS(n$14); [line 23]\n  NULLIFY(&y,false); [line 23]\n " shape="box"]
	

	 57 -> 42 ;
	 57 -> 43 ;
56 [label="56:  UnaryOperator \n   n$13=*&x:int  [line 23]\n  *&x:int =(n$13 - 1) [line 23]\n  DECLARE_LOCALS(&SIL_temp_conditional___51); [line 23]\n  *&SIL_temp_conditional___51:int =n$13 [line 23]\n  REMOVE_TEMPS(n$13); [line 23]\n  NULLIFY(&x,false); [line 23]\n  APPLY_ABSTRACTION; [line 23]\n " shape="box"]
	

	 56 -> 51 ;
55 [label="55:  UnaryOperator \n   n$12=*&x:int  [line 23]\n  *&x:int =(n$12 + 1) [line 23]\n  DECLARE_LOCALS(&SIL_temp_conditional___51); [line 23]\n  *&SIL_temp_conditional___51:int =(n$12 + 1) [line 23]\n  REMOVE_TEMPS(n$12); [line 23]\n  NULLIFY(&x,false); [line 23]\n  APPLY_ABSTRACTION; [line 23]\n " shape="box"]
	

	 55 -> 51 ;
54 [label="54: Prune (false branch) \n   PRUNE(((n$11 > 1) == 0), false); [line 23]\n  REMOVE_TEMPS(n$11); [line 23]\n " shape="invhouse"]
	

	 54 -> 56 ;
53 [label="53: Prune (true branch) \n   PRUNE(((n$11 > 1) != 0), true); [line 23]\n  REMOVE_TEMPS(n$11); [line 23]\n " shape="invhouse"]
	

	 53 -> 55 ;
52 [label="52:  BinaryOperatorStmt: GT \n   *&x:int =1 [line 23]\n  n$11=*&x:int  [line 23]\n " shape="box"]
	

	 52 -> 53 ;
	 52 -> 54 ;
51 [label="51: + \n  " ]
	

	 51 -> 57 ;
50 [label="50:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___40); [line 24]\n  *&SIL_temp_conditional___40:int =0 [line 24]\n  APPLY_ABSTRACTION; [line 24]\n " shape="box"]
	

	 50 -> 40 ;
49 [label="49:  BinaryOperatorStmt: Assign \n   *&x:int =1 [line 24]\n  n$9=*&x:int  [line 24]\n  DECLARE_LOCALS(&SIL_temp_conditional___40); [line 24]\n  *&SIL_temp_conditional___40:int =n$9 [line 24]\n  REMOVE_TEMPS(n$9); [line 24]\n  NULLIFY(&x,false); [line 24]\n  APPLY_ABSTRACTION; [line 24]\n " shape="box"]
	

	 49 -> 40 ;
48 [label="48: Prune (false branch) \n   PRUNE(((n$8 > 1) == 0), false); [line 24]\n  REMOVE_TEMPS(n$8); [line 24]\n " shape="invhouse"]
	

	 48 -> 50 ;
47 [label="47: Prune (true branch) \n   PRUNE(((n$8 > 1) != 0), true); [line 24]\n  REMOVE_TEMPS(n$8); [line 24]\n " shape="invhouse"]
	

	 47 -> 49 ;
46 [label="46:  BinaryOperatorStmt: GT \n   n$8=*&SIL_temp_conditional___41:int  [line 24]\n  NULLIFY(&SIL_temp_conditional___41,true); [line 24]\n " shape="box"]
	

	 46 -> 47 ;
	 46 -> 48 ;
45 [label="45:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___41); [line 24]\n  *&SIL_temp_conditional___41:int =2 [line 24]\n  APPLY_ABSTRACTION; [line 24]\n " shape="box"]
	

	 45 -> 41 ;
44 [label="44:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___41); [line 24]\n  *&SIL_temp_conditional___41:int =1 [line 24]\n  APPLY_ABSTRACTION; [line 24]\n " shape="box"]
	

	 44 -> 41 ;
43 [label="43: Prune (false branch) \n   PRUNE(((3 > 4) == 0), false); [line 24]\n " shape="invhouse"]
	

	 43 -> 45 ;
42 [label="42: Prune (true branch) \n   PRUNE(((3 > 4) != 0), true); [line 24]\n " shape="invhouse"]
	

	 42 -> 44 ;
41 [label="41: + \n  " ]
	

	 41 -> 46 ;
40 [label="40: + \n  " ]
	

	 40 -> 39 ;
39 [label="39:  Return Stmt \n   n$10=*&SIL_temp_conditional___40:int  [line 24]\n  NULLIFY(&SIL_temp_conditional___40,true); [line 24]\n  *&return:int =(0 + n$10) [line 24]\n  REMOVE_TEMPS(n$10); [line 24]\n  APPLY_ABSTRACTION; [line 24]\n " shape="box"]
	

	 39 -> 38 ;
38 [label="38: Exit bar \n  " color=yellow style=filled]
	

37 [label="37: Start bar\nFormals: \nLocals:  x:int  y:int  \n   DECLARE_LOCALS(&return,&x,&y); [line 21]\n  NULLIFY(&x,false); [line 21]\n  NULLIFY(&y,false); [line 21]\n " color=yellow style=filled]
	

	 37 -> 52 ;
36 [label="36:  DeclStmt \n   *&x:int =5 [line 12]\n " shape="box"]
	

	 36 -> 30 ;
	 36 -> 31 ;
35 [label="35:  BinaryOperatorStmt: Assign \n   NULLIFY(&x,false); [line 13]\n  *&x:int =0 [line 13]\n  APPLY_ABSTRACTION; [line 13]\n " shape="box"]
	

	 35 -> 29 ;
34 [label="34: Prune (false branch) \n   PRUNE(((7 < n$7) == 0), false); [line 13]\n  REMOVE_TEMPS(n$7); [line 13]\n  APPLY_ABSTRACTION; [line 13]\n " shape="invhouse"]
	

	 34 -> 29 ;
33 [label="33: Prune (true branch) \n   PRUNE(((7 < n$7) != 0), true); [line 13]\n  REMOVE_TEMPS(n$7); [line 13]\n  APPLY_ABSTRACTION; [line 13]\n " shape="invhouse"]
	

	 33 -> 35 ;
32 [label="32:  BinaryOperatorStmt: LT \n   n$7=*&x:int  [line 13]\n  *&x:int =(n$7 + 1) [line 13]\n " shape="box"]
	

	 32 -> 33 ;
	 32 -> 34 ;
31 [label="31: Prune (false branch) \n   PRUNE(((3 < 4) == 0), false); [line 13]\n " shape="invhouse"]
	

	 31 -> 32 ;
30 [label="30: Prune (true branch) \n   PRUNE(((3 < 4) != 0), true); [line 13]\n  APPLY_ABSTRACTION; [line 13]\n " shape="invhouse"]
	

	 30 -> 35 ;
29 [label="29: + \n  " ]
	

	 29 -> 28 ;
28 [label="28:  DeclStmt \n   *&y:int =19 [line 14]\n " shape="box"]
	

	 28 -> 21 ;
	 28 -> 22 ;
27 [label="27:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___20); [line 15]\n  *&SIL_temp_conditional___20:int =2 [line 15]\n  APPLY_ABSTRACTION; [line 15]\n " shape="box"]
	

	 27 -> 20 ;
26 [label="26:  ConditinalStmt Branch \n   NULLIFY(&x,false); [line 15]\n  NULLIFY(&y,false); [line 15]\n  DECLARE_LOCALS(&SIL_temp_conditional___20); [line 15]\n  *&SIL_temp_conditional___20:int =1 [line 15]\n  APPLY_ABSTRACTION; [line 15]\n " shape="box"]
	

	 26 -> 20 ;
25 [label="25: Prune (false branch) \n   PRUNE(((7 < (n$4 - n$5)) == 0), false); [line 15]\n  REMOVE_TEMPS(n$4,n$5); [line 15]\n " shape="invhouse"]
	

	 25 -> 27 ;
24 [label="24: Prune (true branch) \n   PRUNE(((7 < (n$4 - n$5)) != 0), true); [line 15]\n  REMOVE_TEMPS(n$4,n$5); [line 15]\n  APPLY_ABSTRACTION; [line 15]\n " shape="invhouse"]
	

	 24 -> 26 ;
23 [label="23:  BinaryOperatorStmt: LT \n   n$4=*&x:int  [line 15]\n  *&x:int =(n$4 + 1) [line 15]\n  n$5=*&y:int  [line 15]\n  NULLIFY(&x,false); [line 15]\n  NULLIFY(&y,false); [line 15]\n " shape="box"]
	

	 23 -> 24 ;
	 23 -> 25 ;
22 [label="22: Prune (false branch) \n   PRUNE(((3 < 4) == 0), false); [line 15]\n " shape="invhouse"]
	

	 22 -> 23 ;
21 [label="21: Prune (true branch) \n   PRUNE(((3 < 4) != 0), true); [line 15]\n  APPLY_ABSTRACTION; [line 15]\n " shape="invhouse"]
	

	 21 -> 26 ;
20 [label="20: + \n  " ]
	

	 20 -> 19 ;
19 [label="19:  DeclStmt \n   n$6=*&SIL_temp_conditional___20:int  [line 15]\n  NULLIFY(&SIL_temp_conditional___20,true); [line 15]\n  *&n:int =n$6 [line 15]\n  REMOVE_TEMPS(n$6); [line 15]\n  NULLIFY(&n,false); [line 15]\n " shape="box"]
	

	 19 -> 10 ;
	 19 -> 11 ;
18 [label="18:  BinaryOperatorStmt: Assign \n   n$3=*&SIL_temp_conditional___9:int  [line 16]\n  NULLIFY(&SIL_temp_conditional___9,true); [line 16]\n  *&n:int =n$3 [line 16]\n  REMOVE_TEMPS(n$3); [line 16]\n  NULLIFY(&n,false); [line 16]\n " shape="box"]
	

	 18 -> 5 ;
	 18 -> 6 ;
17 [label="17:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___13); [line 16]\n  *&SIL_temp_conditional___13:int =2 [line 16]\n  APPLY_ABSTRACTION; [line 16]\n " shape="box"]
	

	 17 -> 13 ;
16 [label="16:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___13); [line 16]\n  *&SIL_temp_conditional___13:int =1 [line 16]\n  APPLY_ABSTRACTION; [line 16]\n " shape="box"]
	

	 16 -> 13 ;
15 [label="15: Prune (false branch) \n   PRUNE(((5 > 4) == 0), false); [line 16]\n " shape="invhouse"]
	

	 15 -> 17 ;
14 [label="14: Prune (true branch) \n   PRUNE(((5 > 4) != 0), true); [line 16]\n " shape="invhouse"]
	

	 14 -> 16 ;
13 [label="13:  Temp Join Node \n   n$1=*&SIL_temp_conditional___13:int  [line 16]\n  DECLARE_LOCALS(&SIL_temp_conditional___9); [line 16]\n  *&SIL_temp_conditional___9:int =n$1 [line 16]\n  NULLIFY(&SIL_temp_conditional___13,true); [line 16]\n  REMOVE_TEMPS(n$1); [line 16]\n  APPLY_ABSTRACTION; [line 16]\n " shape="box"]
	

	 13 -> 9 ;
12 [label="12:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___9); [line 16]\n  *&SIL_temp_conditional___9:int =1 [line 16]\n  APPLY_ABSTRACTION; [line 16]\n " shape="box"]
	

	 12 -> 9 ;
11 [label="11: Prune (false branch) \n   PRUNE(((2 < 1) == 0), false); [line 16]\n " shape="invhouse"]
	

	 11 -> 14 ;
	 11 -> 15 ;
10 [label="10: Prune (true branch) \n   PRUNE(((2 < 1) != 0), true); [line 16]\n " shape="invhouse"]
	

	 10 -> 12 ;
9 [label="9: + \n  " ]
	

	 9 -> 18 ;
8 [label="8:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___4); [line 17]\n  *&SIL_temp_conditional___4:int =0 [line 17]\n  APPLY_ABSTRACTION; [line 17]\n " shape="box"]
	

	 8 -> 4 ;
7 [label="7:  ConditinalStmt Branch \n   DECLARE_LOCALS(&SIL_temp_conditional___4); [line 17]\n  *&SIL_temp_conditional___4:int =1 [line 17]\n  APPLY_ABSTRACTION; [line 17]\n " shape="box"]
	

	 7 -> 4 ;
6 [label="6: Prune (false branch) \n   PRUNE(((7 > 9) == 0), false); [line 17]\n " shape="invhouse"]
	

	 6 -> 8 ;
5 [label="5: Prune (true branch) \n   PRUNE(((7 > 9) != 0), true); [line 17]\n " shape="invhouse"]
	

	 5 -> 7 ;
4 [label="4: + \n  " ]
	

	 4 -> 3 ;
3 [label="3:  Return Stmt \n   n$0=*&SIL_temp_conditional___4:int  [line 17]\n  NULLIFY(&SIL_temp_conditional___4,true); [line 17]\n  *&return:int =(0 + n$0) [line 17]\n  REMOVE_TEMPS(n$0); [line 17]\n  APPLY_ABSTRACTION; [line 17]\n " shape="box"]
	

	 3 -> 2 ;
2 [label="2: Exit foo \n  " color=yellow style=filled]
	

1 [label="1: Start foo\nFormals: \nLocals:  x:int  y:int  n:int  \n   DECLARE_LOCALS(&return,&x,&y,&n); [line 10]\n  NULLIFY(&n,false); [line 10]\n  NULLIFY(&x,false); [line 10]\n  NULLIFY(&y,false); [line 10]\n " color=yellow style=filled]
	

	 1 -> 36 ;
}
