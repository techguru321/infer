/* @generated */
digraph iCFG {
"test310" [label="10:  DeclStmt \n   n$3=*&0$?%__sil_tmpSIL_temp_conditional___n$2:int  [line 22]\n  *&x:int =n$3 [line 22]\n " shape="box"]
	

	 "test310" -> "test33" ;
"test39" [label="9:  BinaryConditinalStmt Init \n   n$1=*&b:int  [line 22]\n " shape="box"]
	

	 "test39" -> "test35" ;
	 "test39" -> "test36" ;
"test38" [label="8:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$2:int =1 [line 22]\n " shape="box"]
	

	 "test38" -> "test34" ;
"test37" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$2:int =n$1 [line 22]\n " shape="box"]
	

	 "test37" -> "test34" ;
"test36" [label="6: Prune (false branch) \n   PRUNE((n$1 == 0), false); [line 22]\n " shape="invhouse"]
	

	 "test36" -> "test38" ;
"test35" [label="5: Prune (true branch) \n   PRUNE((n$1 != 0), true); [line 22]\n " shape="invhouse"]
	

	 "test35" -> "test37" ;
"test34" [label="4: + \n  " ]
	

	 "test34" -> "test310" ;
"test33" [label="3:  Return Stmt \n   n$0=*&x:int  [line 23]\n  *&return:int =n$0 [line 23]\n " shape="box"]
	

	 "test33" -> "test32" ;
"test32" [label="2: Exit test3 \n  " color=yellow style=filled]
	

"test31" [label="1: Start test3\nFormals:  b:int \nLocals:  x:int  0$?%__sil_tmpSIL_temp_conditional___n$2:int  \n   DECLARE_LOCALS(&return,&x,&0$?%__sil_tmpSIL_temp_conditional___n$2); [line 21]\n " color=yellow style=filled]
	

	 "test31" -> "test39" ;
"test59" [label="9:  Return Stmt \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$1:int  [line 28]\n  *&return:int =n$2 [line 28]\n " shape="box"]
	

	 "test59" -> "test52" ;
"test58" [label="8:  BinaryConditinalStmt Init \n   n$0=*&b:int  [line 28]\n " shape="box"]
	

	 "test58" -> "test54" ;
	 "test58" -> "test55" ;
"test57" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =1 [line 28]\n " shape="box"]
	

	 "test57" -> "test53" ;
"test56" [label="6:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =n$0 [line 28]\n " shape="box"]
	

	 "test56" -> "test53" ;
"test55" [label="5: Prune (false branch) \n   PRUNE((n$0 == 0), false); [line 28]\n " shape="invhouse"]
	

	 "test55" -> "test57" ;
"test54" [label="4: Prune (true branch) \n   PRUNE((n$0 != 0), true); [line 28]\n " shape="invhouse"]
	

	 "test54" -> "test56" ;
"test53" [label="3: + \n  " ]
	

	 "test53" -> "test59" ;
"test52" [label="2: Exit test5 \n  " color=yellow style=filled]
	

"test51" [label="1: Start test5\nFormals:  b:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$1:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$1); [line 28]\n " color=yellow style=filled]
	

	 "test51" -> "test58" ;
"test49" [label="9:  Return Stmt \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$1:int  [line 26]\n  n$3=_fun_test2(n$2:int ) [line 26]\n  *&return:int =n$3 [line 26]\n " shape="box"]
	

	 "test49" -> "test42" ;
"test48" [label="8:  BinaryConditinalStmt Init \n   n$0=*&b:int  [line 26]\n " shape="box"]
	

	 "test48" -> "test44" ;
	 "test48" -> "test45" ;
"test47" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =1 [line 26]\n " shape="box"]
	

	 "test47" -> "test43" ;
"test46" [label="6:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =n$0 [line 26]\n " shape="box"]
	

	 "test46" -> "test43" ;
"test45" [label="5: Prune (false branch) \n   PRUNE((n$0 == 0), false); [line 26]\n " shape="invhouse"]
	

	 "test45" -> "test47" ;
"test44" [label="4: Prune (true branch) \n   PRUNE((n$0 != 0), true); [line 26]\n " shape="invhouse"]
	

	 "test44" -> "test46" ;
"test43" [label="3: + \n  " ]
	

	 "test43" -> "test49" ;
"test42" [label="2: Exit test4 \n  " color=yellow style=filled]
	

"test41" [label="1: Start test4\nFormals:  b:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$1:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$1); [line 26]\n " color=yellow style=filled]
	

	 "test41" -> "test48" ;
"test23" [label="3:  Return Stmt \n   n$0=*&x:int  [line 12]\n  *&return:int =n$0 [line 12]\n " shape="box"]
	

	 "test23" -> "test22" ;
"test22" [label="2: Exit test2 \n  " color=yellow style=filled]
	

"test21" [label="1: Start test2\nFormals:  x:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 "test21" -> "test23" ;
"test19" [label="9:  DeclStmt \n   n$4=*&0$?%__sil_tmpSIL_temp_conditional___n$1:int  [line 17]\n  *&x:int =n$4 [line 17]\n " shape="box"]
	

	 "test19" -> "test13" ;
"test18" [label="8:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =1 [line 17]\n " shape="box"]
	

	 "test18" -> "test14" ;
"test17" [label="7:  ConditinalStmt Branch \n   n$3=*&b:int  [line 17]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =n$3 [line 17]\n " shape="box"]
	

	 "test17" -> "test14" ;
"test16" [label="6: Prune (false branch) \n   n$2=*&b:int  [line 17]\n  PRUNE((n$2 == 0), false); [line 17]\n " shape="invhouse"]
	

	 "test16" -> "test18" ;
"test15" [label="5: Prune (true branch) \n   n$2=*&b:int  [line 17]\n  PRUNE((n$2 != 0), true); [line 17]\n " shape="invhouse"]
	

	 "test15" -> "test17" ;
"test14" [label="4: + \n  " ]
	

	 "test14" -> "test19" ;
"test13" [label="3:  Return Stmt \n   n$0=*&x:int  [line 18]\n  *&return:int =n$0 [line 18]\n " shape="box"]
	

	 "test13" -> "test12" ;
"test12" [label="2: Exit test1 \n  " color=yellow style=filled]
	

"test11" [label="1: Start test1\nFormals:  b:int \nLocals:  x:int  0$?%__sil_tmpSIL_temp_conditional___n$1:int  \n   DECLARE_LOCALS(&return,&x,&0$?%__sil_tmpSIL_temp_conditional___n$1); [line 16]\n " color=yellow style=filled]
	

	 "test11" -> "test15" ;
	 "test11" -> "test16" ;
"test79" [label="9:  Return Stmt \n   n$3=*&0$?%__sil_tmpSIL_temp_conditional___n$2:int  [line 35]\n  *&return:int =n$3 [line 35]\n " shape="box"]
	

	 "test79" -> "test72" ;
"test78" [label="8:  BinaryConditinalStmt Init \n   n$0=_fun_test2(2:int ) [line 35]\n  n$1=_fun_test2((2 + n$0):int ) [line 35]\n " shape="box"]
	

	 "test78" -> "test74" ;
	 "test78" -> "test75" ;
"test77" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$2:int =2 [line 35]\n " shape="box"]
	

	 "test77" -> "test73" ;
"test76" [label="6:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$2:int =n$1 [line 35]\n " shape="box"]
	

	 "test76" -> "test73" ;
"test75" [label="5: Prune (false branch) \n   PRUNE((n$1 == 0), false); [line 35]\n " shape="invhouse"]
	

	 "test75" -> "test77" ;
"test74" [label="4: Prune (true branch) \n   PRUNE((n$1 != 0), true); [line 35]\n " shape="invhouse"]
	

	 "test74" -> "test76" ;
"test73" [label="3: + \n  " ]
	

	 "test73" -> "test79" ;
"test72" [label="2: Exit test7 \n  " color=yellow style=filled]
	

"test71" [label="1: Start test7\nFormals:  b:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$2:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$2); [line 35]\n " color=yellow style=filled]
	

	 "test71" -> "test78" ;
"test69" [label="9:  DeclStmt \n   n$4=*&0$?%__sil_tmpSIL_temp_conditional___n$1:int  [line 31]\n  *&z:int =n$4 [line 31]\n " shape="box"]
	

	 "test69" -> "test63" ;
"test68" [label="8:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =0 [line 31]\n " shape="box"]
	

	 "test68" -> "test64" ;
"test67" [label="7:  ConditinalStmt Branch \n   n$2=*&p:int * [line 31]\n  n$3=*n$2:int  [line 31]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =n$3 [line 31]\n " shape="box"]
	

	 "test67" -> "test64" ;
"test66" [label="6: Prune (false branch) \n   PRUNE((1 == 0), false); [line 31]\n " shape="invhouse"]
	

	 "test66" -> "test68" ;
"test65" [label="5: Prune (true branch) \n   PRUNE((1 != 0), true); [line 31]\n " shape="invhouse"]
	

	 "test65" -> "test67" ;
"test64" [label="4: + \n  " ]
	

	 "test64" -> "test69" ;
"test63" [label="3:  Return Stmt \n   n$0=*&z:int  [line 32]\n  *&return:int =n$0 [line 32]\n " shape="box"]
	

	 "test63" -> "test62" ;
"test62" [label="2: Exit test6 \n  " color=yellow style=filled]
	

"test61" [label="1: Start test6\nFormals:  p:int *\nLocals:  z:int  0$?%__sil_tmpSIL_temp_conditional___n$1:int  \n   DECLARE_LOCALS(&return,&z,&0$?%__sil_tmpSIL_temp_conditional___n$1); [line 30]\n " color=yellow style=filled]
	

	 "test61" -> "test65" ;
	 "test61" -> "test66" ;
"test8" [label="8:  Return Stmt \n   n$3=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int  [line 14]\n  n$4=_fun_test2(n$3:int ) [line 14]\n  *&return:int =n$4 [line 14]\n " shape="box"]
	

	 "test8" -> "test2" ;
"test7" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =1 [line 14]\n " shape="box"]
	

	 "test7" -> "test3" ;
"test6" [label="6:  ConditinalStmt Branch \n   n$2=*&b:int  [line 14]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =n$2 [line 14]\n " shape="box"]
	

	 "test6" -> "test3" ;
"test5" [label="5: Prune (false branch) \n   n$1=*&b:int  [line 14]\n  PRUNE((n$1 == 0), false); [line 14]\n " shape="invhouse"]
	

	 "test5" -> "test7" ;
"test4" [label="4: Prune (true branch) \n   n$1=*&b:int  [line 14]\n  PRUNE((n$1 != 0), true); [line 14]\n " shape="invhouse"]
	

	 "test4" -> "test6" ;
"test3" [label="3: + \n  " ]
	

	 "test3" -> "test8" ;
"test2" [label="2: Exit test \n  " color=yellow style=filled]
	

"test1" [label="1: Start test\nFormals:  b:int \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0); [line 14]\n " color=yellow style=filled]
	

	 "test1" -> "test4" ;
	 "test1" -> "test5" ;
}
