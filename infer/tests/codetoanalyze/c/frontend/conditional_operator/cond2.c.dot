/* @generated */
digraph iCFG {
"foo37" [label="37:  DeclStmt \n   *&x:int =5 [line 11]\n " shape="box"]
	

	 "foo37" -> "foo31" ;
	 "foo37" -> "foo32" ;
"foo36" [label="36:  BinaryOperatorStmt: Assign \n   *&x:int =0 [line 13]\n " shape="box"]
	

	 "foo36" -> "foo30" ;
"foo35" [label="35: Prune (false branch) \n   PRUNE(((7 < n$10) == 0), false); [line 12]\n " shape="invhouse"]
	

	 "foo35" -> "foo30" ;
"foo34" [label="34: Prune (true branch) \n   PRUNE(((7 < n$10) != 0), true); [line 12]\n " shape="invhouse"]
	

	 "foo34" -> "foo36" ;
"foo33" [label="33:  BinaryOperatorStmt: LT \n   n$10=*&x:int  [line 12]\n  *&x:int =(n$10 + 1) [line 12]\n " shape="box"]
	

	 "foo33" -> "foo34" ;
	 "foo33" -> "foo35" ;
"foo32" [label="32: Prune (false branch) \n   PRUNE(((3 < 4) == 0), false); [line 12]\n " shape="invhouse"]
	

	 "foo32" -> "foo33" ;
"foo31" [label="31: Prune (true branch) \n   PRUNE(((3 < 4) != 0), true); [line 12]\n " shape="invhouse"]
	

	 "foo31" -> "foo36" ;
"foo30" [label="30: + \n  " ]
	

	 "foo30" -> "foo29" ;
"foo29" [label="29:  DeclStmt \n   *&y:int =19 [line 15]\n " shape="box"]
	

	 "foo29" -> "foo21" ;
	 "foo29" -> "foo22" ;
"foo28" [label="28:  DeclStmt \n   n$9=*&0$?%__sil_tmpSIL_temp_conditional___n$6:int  [line 16]\n  *&n:int =n$9 [line 16]\n " shape="box"]
	

	 "foo28" -> "foo10" ;
	 "foo28" -> "foo11" ;
"foo27" [label="27:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$6:int =2 [line 16]\n " shape="box"]
	

	 "foo27" -> "foo20" ;
"foo26" [label="26:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$6:int =1 [line 16]\n " shape="box"]
	

	 "foo26" -> "foo20" ;
"foo25" [label="25: Prune (false branch) \n   PRUNE(((7 < (n$7 - n$8)) == 0), false); [line 16]\n " shape="invhouse"]
	

	 "foo25" -> "foo27" ;
"foo24" [label="24: Prune (true branch) \n   PRUNE(((7 < (n$7 - n$8)) != 0), true); [line 16]\n " shape="invhouse"]
	

	 "foo24" -> "foo26" ;
"foo23" [label="23:  BinaryOperatorStmt: LT \n   n$7=*&x:int  [line 16]\n  *&x:int =(n$7 + 1) [line 16]\n  n$8=*&y:int  [line 16]\n " shape="box"]
	

	 "foo23" -> "foo24" ;
	 "foo23" -> "foo25" ;
"foo22" [label="22: Prune (false branch) \n   PRUNE(((3 < 4) == 0), false); [line 16]\n " shape="invhouse"]
	

	 "foo22" -> "foo23" ;
"foo21" [label="21: Prune (true branch) \n   PRUNE(((3 < 4) != 0), true); [line 16]\n " shape="invhouse"]
	

	 "foo21" -> "foo26" ;
"foo20" [label="20: + \n  " ]
	

	 "foo20" -> "foo28" ;
"foo19" [label="19:  BinaryOperatorStmt: Assign \n   n$5=*&0$?%__sil_tmpSIL_temp_conditional___n$2:int  [line 17]\n  *&n:int =n$5 [line 17]\n " shape="box"]
	

	 "foo19" -> "foo4" ;
	 "foo19" -> "foo5" ;
"foo18" [label="18:  ConditinalStmt Branch \n   n$4=*&0$?%__sil_tmpSIL_temp_conditional___n$3:int  [line 17]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$2:int =n$4 [line 17]\n " shape="box"]
	

	 "foo18" -> "foo9" ;
"foo17" [label="17:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$3:int =2 [line 17]\n " shape="box"]
	

	 "foo17" -> "foo13" ;
"foo16" [label="16:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$3:int =1 [line 17]\n " shape="box"]
	

	 "foo16" -> "foo13" ;
"foo15" [label="15: Prune (false branch) \n   PRUNE(((5 > 4) == 0), false); [line 17]\n " shape="invhouse"]
	

	 "foo15" -> "foo17" ;
"foo14" [label="14: Prune (true branch) \n   PRUNE(((5 > 4) != 0), true); [line 17]\n " shape="invhouse"]
	

	 "foo14" -> "foo16" ;
"foo13" [label="13: + \n  " ]
	

	 "foo13" -> "foo18" ;
"foo12" [label="12:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$2:int =1 [line 17]\n " shape="box"]
	

	 "foo12" -> "foo9" ;
"foo11" [label="11: Prune (false branch) \n   PRUNE(((2 < 1) == 0), false); [line 17]\n " shape="invhouse"]
	

	 "foo11" -> "foo14" ;
	 "foo11" -> "foo15" ;
"foo10" [label="10: Prune (true branch) \n   PRUNE(((2 < 1) != 0), true); [line 17]\n " shape="invhouse"]
	

	 "foo10" -> "foo12" ;
"foo9" [label="9: + \n  " ]
	

	 "foo9" -> "foo19" ;
"foo8" [label="8:  Return Stmt \n   n$1=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int  [line 18]\n  *&return:int =(0 + n$1) [line 18]\n " shape="box"]
	

	 "foo8" -> "foo2" ;
"foo7" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =0 [line 18]\n " shape="box"]
	

	 "foo7" -> "foo3" ;
"foo6" [label="6:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =1 [line 18]\n " shape="box"]
	

	 "foo6" -> "foo3" ;
"foo5" [label="5: Prune (false branch) \n   PRUNE(((7 > 9) == 0), false); [line 18]\n " shape="invhouse"]
	

	 "foo5" -> "foo7" ;
"foo4" [label="4: Prune (true branch) \n   PRUNE(((7 > 9) != 0), true); [line 18]\n " shape="invhouse"]
	

	 "foo4" -> "foo6" ;
"foo3" [label="3: + \n  " ]
	

	 "foo3" -> "foo8" ;
"foo2" [label="2: Exit foo \n  " color=yellow style=filled]
	

"foo1" [label="1: Start foo\nFormals: \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int  0$?%__sil_tmpSIL_temp_conditional___n$2:int  0$?%__sil_tmpSIL_temp_conditional___n$3:int  n:int  0$?%__sil_tmpSIL_temp_conditional___n$6:int  y:int  x:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0,&0$?%__sil_tmpSIL_temp_conditional___n$2,&0$?%__sil_tmpSIL_temp_conditional___n$3,&n,&0$?%__sil_tmpSIL_temp_conditional___n$6,&y,&x); [line 10]\n " color=yellow style=filled]
	

	 "foo1" -> "foo37" ;
"bar21" [label="21:  BinaryOperatorStmt: Assign \n   n$9=*&0$?%__sil_tmpSIL_temp_conditional___n$5:int  [line 23]\n  *&y:int =n$9 [line 23]\n " shape="box"]
	

	 "bar21" -> "bar5" ;
	 "bar21" -> "bar6" ;
"bar20" [label="20:  ConditinalStmt Branch \n   n$8=*&x:int  [line 23]\n  *&x:int =(n$8 - 1) [line 23]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$5:int =n$8 [line 23]\n " shape="box"]
	

	 "bar20" -> "bar15" ;
"bar19" [label="19:  ConditinalStmt Branch \n   n$7=*&x:int  [line 23]\n  *&x:int =(n$7 + 1) [line 23]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$5:int =(n$7 + 1) [line 23]\n " shape="box"]
	

	 "bar19" -> "bar15" ;
"bar18" [label="18: Prune (false branch) \n   PRUNE(((n$6 > 1) == 0), false); [line 23]\n " shape="invhouse"]
	

	 "bar18" -> "bar20" ;
"bar17" [label="17: Prune (true branch) \n   PRUNE(((n$6 > 1) != 0), true); [line 23]\n " shape="invhouse"]
	

	 "bar17" -> "bar19" ;
"bar16" [label="16:  BinaryOperatorStmt: GT \n   *&x:int =1 [line 23]\n  n$6=*&x:int  [line 23]\n " shape="box"]
	

	 "bar16" -> "bar17" ;
	 "bar16" -> "bar18" ;
"bar15" [label="15: + \n  " ]
	

	 "bar15" -> "bar21" ;
"bar14" [label="14:  Return Stmt \n   n$4=*&0$?%__sil_tmpSIL_temp_conditional___n$0:int  [line 24]\n  *&return:int =(0 + n$4) [line 24]\n " shape="box"]
	

	 "bar14" -> "bar2" ;
"bar13" [label="13:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =0 [line 24]\n " shape="box"]
	

	 "bar13" -> "bar3" ;
"bar12" [label="12:  ConditinalStmt Branch \n   *&x:int =1 [line 24]\n  n$3=*&x:int  [line 24]\n  *&0$?%__sil_tmpSIL_temp_conditional___n$0:int =n$3 [line 24]\n " shape="box"]
	

	 "bar12" -> "bar3" ;
"bar11" [label="11: Prune (false branch) \n   PRUNE(((n$2 > 1) == 0), false); [line 24]\n " shape="invhouse"]
	

	 "bar11" -> "bar13" ;
"bar10" [label="10: Prune (true branch) \n   PRUNE(((n$2 > 1) != 0), true); [line 24]\n " shape="invhouse"]
	

	 "bar10" -> "bar12" ;
"bar9" [label="9:  BinaryOperatorStmt: GT \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$1:int  [line 24]\n " shape="box"]
	

	 "bar9" -> "bar10" ;
	 "bar9" -> "bar11" ;
"bar8" [label="8:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =2 [line 24]\n " shape="box"]
	

	 "bar8" -> "bar4" ;
"bar7" [label="7:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =1 [line 24]\n " shape="box"]
	

	 "bar7" -> "bar4" ;
"bar6" [label="6: Prune (false branch) \n   PRUNE(((3 > 4) == 0), false); [line 24]\n " shape="invhouse"]
	

	 "bar6" -> "bar8" ;
"bar5" [label="5: Prune (true branch) \n   PRUNE(((3 > 4) != 0), true); [line 24]\n " shape="invhouse"]
	

	 "bar5" -> "bar7" ;
"bar4" [label="4: + \n  " ]
	

	 "bar4" -> "bar9" ;
"bar3" [label="3: + \n  " ]
	

	 "bar3" -> "bar14" ;
"bar2" [label="2: Exit bar \n  " color=yellow style=filled]
	

"bar1" [label="1: Start bar\nFormals: \nLocals:  0$?%__sil_tmpSIL_temp_conditional___n$0:int  0$?%__sil_tmpSIL_temp_conditional___n$1:int  0$?%__sil_tmpSIL_temp_conditional___n$5:int  y:int  x:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_temp_conditional___n$0,&0$?%__sil_tmpSIL_temp_conditional___n$1,&0$?%__sil_tmpSIL_temp_conditional___n$5,&y,&x); [line 21]\n " color=yellow style=filled]
	

	 "bar1" -> "bar16" ;
}
