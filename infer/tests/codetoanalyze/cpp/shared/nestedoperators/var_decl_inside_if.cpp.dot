/* @generated */
digraph iCFG {
"simple_init_div09" [label="9:  Return Stmt \n   n$2=*&a:int  [line 20]\n  *&return:int =(1 / n$2) [line 20]\n " shape="box"]
	

	 "simple_init_div09" -> "simple_init_div02" ;
"simple_init_div08" [label="8:  Return Stmt \n   n$1=*&a:int  [line 18]\n  *&return:int =n$1 [line 18]\n " shape="box"]
	

	 "simple_init_div08" -> "simple_init_div02" ;
"simple_init_div07" [label="7:  DeclStmt \n   *&a:int =0 [line 17]\n " shape="box"]
	

	 "simple_init_div07" -> "simple_init_div05" ;
	 "simple_init_div07" -> "simple_init_div06" ;
"simple_init_div06" [label="6: Prune (false branch) \n   n$0=*&a:int  [line 17]\n  PRUNE((n$0 == 0), false); [line 17]\n " shape="invhouse"]
	

	 "simple_init_div06" -> "simple_init_div09" ;
"simple_init_div05" [label="5: Prune (true branch) \n   n$0=*&a:int  [line 17]\n  PRUNE((n$0 != 0), true); [line 17]\n " shape="invhouse"]
	

	 "simple_init_div05" -> "simple_init_div08" ;
"simple_init_div04" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "simple_init_div04" -> "simple_init_div02" ;
"simple_init_div03" [label="3: + \n  " ]
	

	 "simple_init_div03" -> "simple_init_div04" ;
"simple_init_div02" [label="2: Exit simple_init_div0 \n  " color=yellow style=filled]
	

"simple_init_div01" [label="1: Start simple_init_div0\nFormals: \nLocals:  a:int  \n   DECLARE_LOCALS(&return,&a); [line 16]\n " color=yellow style=filled]
	

	 "simple_init_div01" -> "simple_init_div07" ;
"conditional_init_div013" [label="13:  Return Stmt \n   n$3=*&a:int  [line 44]\n  *&return:int =(1 / (n$3 - 1)) [line 44]\n " shape="box"]
	

	 "conditional_init_div013" -> "conditional_init_div02" ;
"conditional_init_div012" [label="12:  DeclStmt \n   n$2=*&0$?%__sil_tmpSIL_temp_conditional___n$1:int  [line 43]\n  *&a:int =n$2 [line 43]\n " shape="box"]
	

	 "conditional_init_div012" -> "conditional_init_div05" ;
	 "conditional_init_div012" -> "conditional_init_div06" ;
"conditional_init_div011" [label="11:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =0 [line 43]\n " shape="box"]
	

	 "conditional_init_div011" -> "conditional_init_div07" ;
"conditional_init_div010" [label="10:  ConditinalStmt Branch \n   *&0$?%__sil_tmpSIL_temp_conditional___n$1:int =1 [line 43]\n " shape="box"]
	

	 "conditional_init_div010" -> "conditional_init_div07" ;
"conditional_init_div09" [label="9: Prune (false branch) \n   PRUNE((1 == 0), false); [line 43]\n " shape="invhouse"]
	

	 "conditional_init_div09" -> "conditional_init_div011" ;
"conditional_init_div08" [label="8: Prune (true branch) \n   PRUNE((1 != 0), true); [line 43]\n " shape="invhouse"]
	

	 "conditional_init_div08" -> "conditional_init_div010" ;
"conditional_init_div07" [label="7: + \n  " ]
	

	 "conditional_init_div07" -> "conditional_init_div012" ;
"conditional_init_div06" [label="6: Prune (false branch) \n   n$0=*&a:int  [line 43]\n  PRUNE((n$0 == 0), false); [line 43]\n " shape="invhouse"]
	

	 "conditional_init_div06" -> "conditional_init_div03" ;
"conditional_init_div05" [label="5: Prune (true branch) \n   n$0=*&a:int  [line 43]\n  PRUNE((n$0 != 0), true); [line 43]\n " shape="invhouse"]
	

	 "conditional_init_div05" -> "conditional_init_div013" ;
"conditional_init_div04" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "conditional_init_div04" -> "conditional_init_div02" ;
"conditional_init_div03" [label="3: + \n  " ]
	

	 "conditional_init_div03" -> "conditional_init_div04" ;
"conditional_init_div02" [label="2: Exit conditional_init_div0 \n  " color=yellow style=filled]
	

"conditional_init_div01" [label="1: Start conditional_init_div0\nFormals: \nLocals:  a:int  0$?%__sil_tmpSIL_temp_conditional___n$1:int  \n   DECLARE_LOCALS(&return,&a,&0$?%__sil_tmpSIL_temp_conditional___n$1); [line 42]\n " color=yellow style=filled]
	

	 "conditional_init_div01" -> "conditional_init_div08" ;
	 "conditional_init_div01" -> "conditional_init_div09" ;
"simple_inif_elseif_div014" [label="14:  Return Stmt \n   n$2=*&a:int  [line 30]\n  n$3=*&b:int  [line 30]\n  *&return:int =(1 / (n$2 + n$3)) [line 30]\n " shape="box"]
	

	 "simple_inif_elseif_div014" -> "simple_inif_elseif_div02" ;
"simple_inif_elseif_div013" [label="13:  Return Stmt \n   *&return:int =1 [line 28]\n " shape="box"]
	

	 "simple_inif_elseif_div013" -> "simple_inif_elseif_div02" ;
"simple_inif_elseif_div012" [label="12:  DeclStmt \n   *&b:int =0 [line 27]\n " shape="box"]
	

	 "simple_inif_elseif_div012" -> "simple_inif_elseif_div010" ;
	 "simple_inif_elseif_div012" -> "simple_inif_elseif_div011" ;
"simple_inif_elseif_div011" [label="11: Prune (false branch) \n   n$1=*&b:int  [line 27]\n  PRUNE((n$1 == 0), false); [line 27]\n " shape="invhouse"]
	

	 "simple_inif_elseif_div011" -> "simple_inif_elseif_div014" ;
"simple_inif_elseif_div010" [label="10: Prune (true branch) \n   n$1=*&b:int  [line 27]\n  PRUNE((n$1 != 0), true); [line 27]\n " shape="invhouse"]
	

	 "simple_inif_elseif_div010" -> "simple_inif_elseif_div013" ;
"simple_inif_elseif_div09" [label="9: + \n  " ]
	

	 "simple_inif_elseif_div09" -> "simple_inif_elseif_div03" ;
"simple_inif_elseif_div08" [label="8:  Return Stmt \n   *&return:int =1 [line 26]\n " shape="box"]
	

	 "simple_inif_elseif_div08" -> "simple_inif_elseif_div02" ;
"simple_inif_elseif_div07" [label="7:  DeclStmt \n   *&a:int =0 [line 25]\n " shape="box"]
	

	 "simple_inif_elseif_div07" -> "simple_inif_elseif_div05" ;
	 "simple_inif_elseif_div07" -> "simple_inif_elseif_div06" ;
"simple_inif_elseif_div06" [label="6: Prune (false branch) \n   n$0=*&a:int  [line 25]\n  PRUNE((n$0 == 0), false); [line 25]\n " shape="invhouse"]
	

	 "simple_inif_elseif_div06" -> "simple_inif_elseif_div012" ;
"simple_inif_elseif_div05" [label="5: Prune (true branch) \n   n$0=*&a:int  [line 25]\n  PRUNE((n$0 != 0), true); [line 25]\n " shape="invhouse"]
	

	 "simple_inif_elseif_div05" -> "simple_inif_elseif_div08" ;
"simple_inif_elseif_div04" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "simple_inif_elseif_div04" -> "simple_inif_elseif_div02" ;
"simple_inif_elseif_div03" [label="3: + \n  " ]
	

	 "simple_inif_elseif_div03" -> "simple_inif_elseif_div04" ;
"simple_inif_elseif_div02" [label="2: Exit simple_inif_elseif_div0 \n  " color=yellow style=filled]
	

"simple_inif_elseif_div01" [label="1: Start simple_inif_elseif_div0\nFormals: \nLocals:  a:int  b:int  \n   DECLARE_LOCALS(&return,&a,&b); [line 24]\n " color=yellow style=filled]
	

	 "simple_inif_elseif_div01" -> "simple_inif_elseif_div07" ;
"function_call_init_div08" [label="8:  Return Stmt \n   n$2=*&a:int  [line 38]\n  *&return:int =(1 / (n$2 - 1)) [line 38]\n " shape="box"]
	

	 "function_call_init_div08" -> "function_call_init_div02" ;
"function_call_init_div07" [label="7:  DeclStmt \n   n$1=_fun_get1() [line 37]\n  *&a:int =n$1 [line 37]\n " shape="box"]
	

	 "function_call_init_div07" -> "function_call_init_div05" ;
	 "function_call_init_div07" -> "function_call_init_div06" ;
"function_call_init_div06" [label="6: Prune (false branch) \n   n$0=*&a:int  [line 37]\n  PRUNE((n$0 == 0), false); [line 37]\n " shape="invhouse"]
	

	 "function_call_init_div06" -> "function_call_init_div03" ;
"function_call_init_div05" [label="5: Prune (true branch) \n   n$0=*&a:int  [line 37]\n  PRUNE((n$0 != 0), true); [line 37]\n " shape="invhouse"]
	

	 "function_call_init_div05" -> "function_call_init_div08" ;
"function_call_init_div04" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "function_call_init_div04" -> "function_call_init_div02" ;
"function_call_init_div03" [label="3: + \n  " ]
	

	 "function_call_init_div03" -> "function_call_init_div04" ;
"function_call_init_div02" [label="2: Exit function_call_init_div0 \n  " color=yellow style=filled]
	

"function_call_init_div01" [label="1: Start function_call_init_div0\nFormals: \nLocals:  a:int  \n   DECLARE_LOCALS(&return,&a); [line 36]\n " color=yellow style=filled]
	

	 "function_call_init_div01" -> "function_call_init_div07" ;
"simple_init_null_deref9" [label="9:  Return Stmt \n   n$1=*&p:int * [line 60]\n  n$2=*n$1:int  [line 60]\n  *&return:int =n$2 [line 60]\n " shape="box"]
	

	 "simple_init_null_deref9" -> "simple_init_null_deref2" ;
"simple_init_null_deref8" [label="8:  Return Stmt \n   *&return:int =1 [line 58]\n " shape="box"]
	

	 "simple_init_null_deref8" -> "simple_init_null_deref2" ;
"simple_init_null_deref7" [label="7:  DeclStmt \n   *&p:int *=null [line 57]\n " shape="box"]
	

	 "simple_init_null_deref7" -> "simple_init_null_deref5" ;
	 "simple_init_null_deref7" -> "simple_init_null_deref6" ;
"simple_init_null_deref6" [label="6: Prune (false branch) \n   n$0=*&p:int * [line 57]\n  PRUNE((n$0 == 0), false); [line 57]\n " shape="invhouse"]
	

	 "simple_init_null_deref6" -> "simple_init_null_deref9" ;
"simple_init_null_deref5" [label="5: Prune (true branch) \n   n$0=*&p:int * [line 57]\n  PRUNE((n$0 != 0), true); [line 57]\n " shape="invhouse"]
	

	 "simple_init_null_deref5" -> "simple_init_null_deref8" ;
"simple_init_null_deref4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "simple_init_null_deref4" -> "simple_init_null_deref2" ;
"simple_init_null_deref3" [label="3: + \n  " ]
	

	 "simple_init_null_deref3" -> "simple_init_null_deref4" ;
"simple_init_null_deref2" [label="2: Exit simple_init_null_deref \n  " color=yellow style=filled]
	

"simple_init_null_deref1" [label="1: Start simple_init_null_deref\nFormals: \nLocals:  p:int * \n   DECLARE_LOCALS(&return,&p); [line 56]\n " color=yellow style=filled]
	

	 "simple_init_null_deref1" -> "simple_init_null_deref7" ;
"reference_init_div09" [label="9:  DeclStmt \n   *&r:int =1 [line 49]\n " shape="box"]
	

	 "reference_init_div09" -> "reference_init_div07" ;
"reference_init_div08" [label="8:  BinaryOperatorStmt: Assign \n   n$3=*&a:int & [line 51]\n  *n$3:int =0 [line 51]\n " shape="box"]
	

	 "reference_init_div08" -> "reference_init_div04" ;
"reference_init_div07" [label="7:  DeclStmt \n   *&a:int &=&r [line 50]\n " shape="box"]
	

	 "reference_init_div07" -> "reference_init_div05" ;
	 "reference_init_div07" -> "reference_init_div06" ;
"reference_init_div06" [label="6: Prune (false branch) \n   n$1=*&a:int & [line 50]\n  n$2=*n$1:int  [line 50]\n  PRUNE((n$2 == 0), false); [line 50]\n " shape="invhouse"]
	

	 "reference_init_div06" -> "reference_init_div04" ;
"reference_init_div05" [label="5: Prune (true branch) \n   n$1=*&a:int & [line 50]\n  n$2=*n$1:int  [line 50]\n  PRUNE((n$2 != 0), true); [line 50]\n " shape="invhouse"]
	

	 "reference_init_div05" -> "reference_init_div08" ;
"reference_init_div04" [label="4: + \n  " ]
	

	 "reference_init_div04" -> "reference_init_div03" ;
"reference_init_div03" [label="3:  Return Stmt \n   n$0=*&r:int  [line 53]\n  *&return:int =(1 / n$0) [line 53]\n " shape="box"]
	

	 "reference_init_div03" -> "reference_init_div02" ;
"reference_init_div02" [label="2: Exit reference_init_div0 \n  " color=yellow style=filled]
	

"reference_init_div01" [label="1: Start reference_init_div0\nFormals: \nLocals:  a:int & r:int  \n   DECLARE_LOCALS(&return,&a,&r); [line 48]\n " color=yellow style=filled]
	

	 "reference_init_div01" -> "reference_init_div09" ;
"get13" [label="3:  Return Stmt \n   *&return:int =1 [line 34]\n " shape="box"]
	

	 "get13" -> "get12" ;
"get12" [label="2: Exit get1 \n  " color=yellow style=filled]
	

"get11" [label="1: Start get1\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 34]\n " color=yellow style=filled]
	

	 "get11" -> "get13" ;
"simple_init_div18" [label="8:  Return Stmt \n   n$1=*&a:int  [line 12]\n  *&return:int =(1 / n$1) [line 12]\n " shape="box"]
	

	 "simple_init_div18" -> "simple_init_div12" ;
"simple_init_div17" [label="7:  DeclStmt \n   *&a:int =1 [line 11]\n " shape="box"]
	

	 "simple_init_div17" -> "simple_init_div15" ;
	 "simple_init_div17" -> "simple_init_div16" ;
"simple_init_div16" [label="6: Prune (false branch) \n   n$0=*&a:int  [line 11]\n  PRUNE((n$0 == 0), false); [line 11]\n " shape="invhouse"]
	

	 "simple_init_div16" -> "simple_init_div13" ;
"simple_init_div15" [label="5: Prune (true branch) \n   n$0=*&a:int  [line 11]\n  PRUNE((n$0 != 0), true); [line 11]\n " shape="invhouse"]
	

	 "simple_init_div15" -> "simple_init_div18" ;
"simple_init_div14" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "simple_init_div14" -> "simple_init_div12" ;
"simple_init_div13" [label="3: + \n  " ]
	

	 "simple_init_div13" -> "simple_init_div14" ;
"simple_init_div12" [label="2: Exit simple_init_div1 \n  " color=yellow style=filled]
	

"simple_init_div11" [label="1: Start simple_init_div1\nFormals: \nLocals:  a:int  \n   DECLARE_LOCALS(&return,&a); [line 10]\n " color=yellow style=filled]
	

	 "simple_init_div11" -> "simple_init_div17" ;
}
