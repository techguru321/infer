/* @generated */
digraph iCFG {
"get_global_ptr_div1_method5" [label="5:  BinaryOperatorStmt: Assign \n   n$5=_fun_get_global_ptr() [line 68]\n  *n$5.f:int =0 [line 68]\n " shape="box"]
	

	 "get_global_ptr_div1_method5" -> "get_global_ptr_div1_method4" ;
"get_global_ptr_div1_method4" [label="4:  Call _fun_X_nonzero \n   n$3=_fun_get_global_ptr() [line 69]\n  _=*n$3:class X  [line 69]\n  _fun_X_nonzero(n$3:class X *) [line 69]\n " shape="box"]
	

	 "get_global_ptr_div1_method4" -> "get_global_ptr_div1_method3" ;
"get_global_ptr_div1_method3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ptr() [line 70]\n  _=*n$0:class X  [line 70]\n  n$2=_fun_X_div(n$0:class X *) [line 70]\n " shape="box"]
	

	 "get_global_ptr_div1_method3" -> "get_global_ptr_div1_method2" ;
"get_global_ptr_div1_method2" [label="2: Exit get_global_ptr_div1_method \n  " color=yellow style=filled]
	

"get_global_ptr_div1_method1" [label="1: Start get_global_ptr_div1_method\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 67]\n " color=yellow style=filled]
	

	 "get_global_ptr_div1_method1" -> "get_global_ptr_div1_method5" ;
"X_div3" [label="3:  Return Stmt \n   n$0=*&this:class X * [line 14]\n  n$1=*n$0.f:int  [line 14]\n  *&return:int =(1 / n$1) [line 14]\n " shape="box"]
	

	 "X_div3" -> "X_div2" ;
"X_div2" [label="2: Exit X_div \n  " color=yellow style=filled]
	

"X_div1" [label="1: Start X_div\nFormals:  this:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 14]\n " color=yellow style=filled]
	

	 "X_div1" -> "X_div3" ;
"get_global_ref_div0_field5" [label="5:  Call _fun_X_nonzero \n   n$4=_fun_get_global_ref() [line 118]\n  _=*n$4:class X  [line 118]\n  _fun_X_nonzero(n$4:class X &) [line 118]\n " shape="box"]
	

	 "get_global_ref_div0_field5" -> "get_global_ref_div0_field4" ;
"get_global_ref_div0_field4" [label="4:  BinaryOperatorStmt: Assign \n   n$3=_fun_get_global_ref() [line 119]\n  *n$3.f:int =0 [line 119]\n " shape="box"]
	

	 "get_global_ref_div0_field4" -> "get_global_ref_div0_field3" ;
"get_global_ref_div0_field3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ref() [line 120]\n  _=*n$0:class X  [line 120]\n  n$2=_fun_X_div(n$0:class X &) [line 120]\n " shape="box"]
	

	 "get_global_ref_div0_field3" -> "get_global_ref_div0_field2" ;
"get_global_ref_div0_field2" [label="2: Exit get_global_ref_div0_field \n  " color=yellow style=filled]
	

"get_global_ref_div0_field1" [label="1: Start get_global_ref_div0_field\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 117]\n " color=yellow style=filled]
	

	 "get_global_ref_div0_field1" -> "get_global_ref_div0_field5" ;
"method_div0_ref4" [label="4:  Call _fun_zero_ref \n   n$3=*&x:class X & [line 86]\n  _fun_zero_ref(n$3:class X &) [line 86]\n " shape="box"]
	

	 "method_div0_ref4" -> "method_div0_ref3" ;
"method_div0_ref3" [label="3:  Return Stmt \n   n$0=*&x:class X & [line 87]\n  _=*n$0:class X  [line 87]\n  n$2=_fun_X_div(n$0:class X &) [line 87]\n  *&return:int =n$2 [line 87]\n " shape="box"]
	

	 "method_div0_ref3" -> "method_div0_ref2" ;
"method_div0_ref2" [label="2: Exit method_div0_ref \n  " color=yellow style=filled]
	

"method_div0_ref1" [label="1: Start method_div0_ref\nFormals:  x:class X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 85]\n " color=yellow style=filled]
	

	 "method_div0_ref1" -> "method_div0_ref4" ;
"method_div0_ptr8" [label="8:  Call _fun_zero_ptr \n   n$4=*&x:class X * [line 35]\n  _fun_zero_ptr(n$4:class X *) [line 35]\n " shape="box"]
	

	 "method_div0_ptr8" -> "method_div0_ptr7" ;
"method_div0_ptr7" [label="7:  Return Stmt \n   n$1=*&x:class X * [line 36]\n  _=*n$1:class X  [line 36]\n  n$3=_fun_X_div(n$1:class X *) [line 36]\n  *&return:int =n$3 [line 36]\n " shape="box"]
	

	 "method_div0_ptr7" -> "method_div0_ptr2" ;
"method_div0_ptr6" [label="6: Prune (false branch) \n   n$0=*&x:class X * [line 34]\n  PRUNE((n$0 == 0), false); [line 34]\n " shape="invhouse"]
	

	 "method_div0_ptr6" -> "method_div0_ptr3" ;
"method_div0_ptr5" [label="5: Prune (true branch) \n   n$0=*&x:class X * [line 34]\n  PRUNE((n$0 != 0), true); [line 34]\n " shape="invhouse"]
	

	 "method_div0_ptr5" -> "method_div0_ptr8" ;
"method_div0_ptr4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "method_div0_ptr4" -> "method_div0_ptr2" ;
"method_div0_ptr3" [label="3: + \n  " ]
	

	 "method_div0_ptr3" -> "method_div0_ptr4" ;
"method_div0_ptr2" [label="2: Exit method_div0_ptr \n  " color=yellow style=filled]
	

"method_div0_ptr1" [label="1: Start method_div0_ptr\nFormals:  x:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 33]\n " color=yellow style=filled]
	

	 "method_div0_ptr1" -> "method_div0_ptr5" ;
	 "method_div0_ptr1" -> "method_div0_ptr6" ;
"__infer_globals_initializer_global3" [label="3:  DeclStmt \n   _fun_X_X(&#GB<shared/reference/reference_struct_e2e.cpp>$global:class X *) [line 29]\n " shape="box"]
	

	 "__infer_globals_initializer_global3" -> "__infer_globals_initializer_global2" ;
"__infer_globals_initializer_global2" [label="2: Exit __infer_globals_initializer_global \n  " color=yellow style=filled]
	

"__infer_globals_initializer_global1" [label="1: Start __infer_globals_initializer_global\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 29]\n " color=yellow style=filled]
	

	 "__infer_globals_initializer_global1" -> "__infer_globals_initializer_global3" ;
"X_nonzero3" [label="3:  BinaryOperatorStmt: Assign \n   n$0=*&this:class X * [line 12]\n  *n$0.f:int =1 [line 12]\n " shape="box"]
	

	 "X_nonzero3" -> "X_nonzero2" ;
"X_nonzero2" [label="2: Exit X_nonzero \n  " color=yellow style=filled]
	

"X_nonzero1" [label="1: Start X_nonzero\nFormals:  this:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 "X_nonzero1" -> "X_nonzero3" ;
"get_global_ref_div1_field5" [label="5:  Call _fun_X_zero \n   n$4=_fun_get_global_ref() [line 124]\n  _=*n$4:class X  [line 124]\n  _fun_X_zero(n$4:class X &) [line 124]\n " shape="box"]
	

	 "get_global_ref_div1_field5" -> "get_global_ref_div1_field4" ;
"get_global_ref_div1_field4" [label="4:  BinaryOperatorStmt: Assign \n   n$3=_fun_get_global_ref() [line 125]\n  *n$3.f:int =1 [line 125]\n " shape="box"]
	

	 "get_global_ref_div1_field4" -> "get_global_ref_div1_field3" ;
"get_global_ref_div1_field3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ref() [line 126]\n  _=*n$0:class X  [line 126]\n  n$2=_fun_X_div(n$0:class X &) [line 126]\n " shape="box"]
	

	 "get_global_ref_div1_field3" -> "get_global_ref_div1_field2" ;
"get_global_ref_div1_field2" [label="2: Exit get_global_ref_div1_field \n  " color=yellow style=filled]
	

"get_global_ref_div1_field1" [label="1: Start get_global_ref_div1_field\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 123]\n " color=yellow style=filled]
	

	 "get_global_ref_div1_field1" -> "get_global_ref_div1_field5" ;
"get_global_ref3" [label="3:  Return Stmt \n   *&return:class X &=&#GB<shared/reference/reference_struct_e2e.cpp>$global [line 31]\n " shape="box"]
	

	 "get_global_ref3" -> "get_global_ref2" ;
"get_global_ref2" [label="2: Exit get_global_ref \n  " color=yellow style=filled]
	

"get_global_ref1" [label="1: Start get_global_ref\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 31]\n " color=yellow style=filled]
	

	 "get_global_ref1" -> "get_global_ref3" ;
"zero_ptr3" [label="3:  Call _fun_X_zero \n   n$0=*&x:class X * [line 17]\n  _=*n$0:class X  [line 17]\n  _fun_X_zero(n$0:class X *) [line 17]\n " shape="box"]
	

	 "zero_ptr3" -> "zero_ptr2" ;
"zero_ptr2" [label="2: Exit zero_ptr \n  " color=yellow style=filled]
	

"zero_ptr1" [label="1: Start zero_ptr\nFormals:  x:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 17]\n " color=yellow style=filled]
	

	 "zero_ptr1" -> "zero_ptr3" ;
"get_global_ptr_div0_method5" [label="5:  BinaryOperatorStmt: Assign \n   n$5=_fun_get_global_ptr() [line 62]\n  *n$5.f:int =1 [line 62]\n " shape="box"]
	

	 "get_global_ptr_div0_method5" -> "get_global_ptr_div0_method4" ;
"get_global_ptr_div0_method4" [label="4:  Call _fun_X_zero \n   n$3=_fun_get_global_ptr() [line 63]\n  _=*n$3:class X  [line 63]\n  _fun_X_zero(n$3:class X *) [line 63]\n " shape="box"]
	

	 "get_global_ptr_div0_method4" -> "get_global_ptr_div0_method3" ;
"get_global_ptr_div0_method3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ptr() [line 64]\n  _=*n$0:class X  [line 64]\n  n$2=_fun_X_div(n$0:class X *) [line 64]\n " shape="box"]
	

	 "get_global_ptr_div0_method3" -> "get_global_ptr_div0_method2" ;
"get_global_ptr_div0_method2" [label="2: Exit get_global_ptr_div0_method \n  " color=yellow style=filled]
	

"get_global_ptr_div0_method1" [label="1: Start get_global_ptr_div0_method\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 61]\n " color=yellow style=filled]
	

	 "get_global_ptr_div0_method1" -> "get_global_ptr_div0_method5" ;
"X_X2" [label="2: Exit X_X \n  " color=yellow style=filled]
	

"X_X1" [label="1: Start X_X\nFormals:  this:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 10]\n " color=yellow style=filled]
	

	 "X_X1" -> "X_X2" ;
"get_global_ref_div0_method5" [label="5:  BinaryOperatorStmt: Assign \n   n$5=_fun_get_global_ref() [line 106]\n  *n$5.f:int =1 [line 106]\n " shape="box"]
	

	 "get_global_ref_div0_method5" -> "get_global_ref_div0_method4" ;
"get_global_ref_div0_method4" [label="4:  Call _fun_X_zero \n   n$3=_fun_get_global_ref() [line 107]\n  _=*n$3:class X  [line 107]\n  _fun_X_zero(n$3:class X &) [line 107]\n " shape="box"]
	

	 "get_global_ref_div0_method4" -> "get_global_ref_div0_method3" ;
"get_global_ref_div0_method3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ref() [line 108]\n  _=*n$0:class X  [line 108]\n  n$2=_fun_X_div(n$0:class X &) [line 108]\n " shape="box"]
	

	 "get_global_ref_div0_method3" -> "get_global_ref_div0_method2" ;
"get_global_ref_div0_method2" [label="2: Exit get_global_ref_div0_method \n  " color=yellow style=filled]
	

"get_global_ref_div0_method1" [label="1: Start get_global_ref_div0_method\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 105]\n " color=yellow style=filled]
	

	 "get_global_ref_div0_method1" -> "get_global_ref_div0_method5" ;
"method_div1_ptr8" [label="8:  Call _fun_nonzero_ptr \n   n$4=*&x:class X * [line 42]\n  _fun_nonzero_ptr(n$4:class X *) [line 42]\n " shape="box"]
	

	 "method_div1_ptr8" -> "method_div1_ptr7" ;
"method_div1_ptr7" [label="7:  Return Stmt \n   n$1=*&x:class X * [line 43]\n  _=*n$1:class X  [line 43]\n  n$3=_fun_X_div(n$1:class X *) [line 43]\n  *&return:int =n$3 [line 43]\n " shape="box"]
	

	 "method_div1_ptr7" -> "method_div1_ptr2" ;
"method_div1_ptr6" [label="6: Prune (false branch) \n   n$0=*&x:class X * [line 41]\n  PRUNE((n$0 == 0), false); [line 41]\n " shape="invhouse"]
	

	 "method_div1_ptr6" -> "method_div1_ptr3" ;
"method_div1_ptr5" [label="5: Prune (true branch) \n   n$0=*&x:class X * [line 41]\n  PRUNE((n$0 != 0), true); [line 41]\n " shape="invhouse"]
	

	 "method_div1_ptr5" -> "method_div1_ptr8" ;
"method_div1_ptr4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "method_div1_ptr4" -> "method_div1_ptr2" ;
"method_div1_ptr3" [label="3: + \n  " ]
	

	 "method_div1_ptr3" -> "method_div1_ptr4" ;
"method_div1_ptr2" [label="2: Exit method_div1_ptr \n  " color=yellow style=filled]
	

"method_div1_ptr1" [label="1: Start method_div1_ptr\nFormals:  x:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 40]\n " color=yellow style=filled]
	

	 "method_div1_ptr1" -> "method_div1_ptr5" ;
	 "method_div1_ptr1" -> "method_div1_ptr6" ;
"get_global_ptr3" [label="3:  Return Stmt \n   *&return:class X *=&#GB<shared/reference/reference_struct_e2e.cpp>$global [line 30]\n " shape="box"]
	

	 "get_global_ptr3" -> "get_global_ptr2" ;
"get_global_ptr2" [label="2: Exit get_global_ptr \n  " color=yellow style=filled]
	

"get_global_ptr1" [label="1: Start get_global_ptr\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 30]\n " color=yellow style=filled]
	

	 "get_global_ptr1" -> "get_global_ptr3" ;
"zero_ref3" [label="3:  Call _fun_X_zero \n   n$0=*&x:class X & [line 23]\n  _=*n$0:class X  [line 23]\n  _fun_X_zero(n$0:class X &) [line 23]\n " shape="box"]
	

	 "zero_ref3" -> "zero_ref2" ;
"zero_ref2" [label="2: Exit zero_ref \n  " color=yellow style=filled]
	

"zero_ref1" [label="1: Start zero_ref\nFormals:  x:class X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 23]\n " color=yellow style=filled]
	

	 "zero_ref1" -> "zero_ref3" ;
"X_zero3" [label="3:  BinaryOperatorStmt: Assign \n   n$0=*&this:class X * [line 13]\n  *n$0.f:int =0 [line 13]\n " shape="box"]
	

	 "X_zero3" -> "X_zero2" ;
"X_zero2" [label="2: Exit X_zero \n  " color=yellow style=filled]
	

"X_zero1" [label="1: Start X_zero\nFormals:  this:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 13]\n " color=yellow style=filled]
	

	 "X_zero1" -> "X_zero3" ;
"get_global_ptr_div1_field5" [label="5:  Call _fun_X_zero \n   n$4=_fun_get_global_ptr() [line 80]\n  _=*n$4:class X  [line 80]\n  _fun_X_zero(n$4:class X *) [line 80]\n " shape="box"]
	

	 "get_global_ptr_div1_field5" -> "get_global_ptr_div1_field4" ;
"get_global_ptr_div1_field4" [label="4:  BinaryOperatorStmt: Assign \n   n$3=_fun_get_global_ptr() [line 81]\n  *n$3.f:int =1 [line 81]\n " shape="box"]
	

	 "get_global_ptr_div1_field4" -> "get_global_ptr_div1_field3" ;
"get_global_ptr_div1_field3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ptr() [line 82]\n  _=*n$0:class X  [line 82]\n  n$2=_fun_X_div(n$0:class X *) [line 82]\n " shape="box"]
	

	 "get_global_ptr_div1_field3" -> "get_global_ptr_div1_field2" ;
"get_global_ptr_div1_field2" [label="2: Exit get_global_ptr_div1_field \n  " color=yellow style=filled]
	

"get_global_ptr_div1_field1" [label="1: Start get_global_ptr_div1_field\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 79]\n " color=yellow style=filled]
	

	 "get_global_ptr_div1_field1" -> "get_global_ptr_div1_field5" ;
"set_field_ref3" [label="3:  BinaryOperatorStmt: Assign \n   n$0=*&x:class X & [line 27]\n  n$1=*&val:int  [line 27]\n  *n$0.f:int =n$1 [line 27]\n " shape="box"]
	

	 "set_field_ref3" -> "set_field_ref2" ;
"set_field_ref2" [label="2: Exit set_field_ref \n  " color=yellow style=filled]
	

"set_field_ref1" [label="1: Start set_field_ref\nFormals:  x:class X & val:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 27]\n " color=yellow style=filled]
	

	 "set_field_ref1" -> "set_field_ref3" ;
"field_div0_ptr8" [label="8:  Call _fun_set_field_ptr \n   n$4=*&x:class X * [line 49]\n  _fun_set_field_ptr(n$4:class X *,0:int ) [line 49]\n " shape="box"]
	

	 "field_div0_ptr8" -> "field_div0_ptr7" ;
"field_div0_ptr7" [label="7:  Return Stmt \n   n$1=*&x:class X * [line 50]\n  _=*n$1:class X  [line 50]\n  n$3=_fun_X_div(n$1:class X *) [line 50]\n  *&return:int =n$3 [line 50]\n " shape="box"]
	

	 "field_div0_ptr7" -> "field_div0_ptr2" ;
"field_div0_ptr6" [label="6: Prune (false branch) \n   n$0=*&x:class X * [line 48]\n  PRUNE((n$0 == 0), false); [line 48]\n " shape="invhouse"]
	

	 "field_div0_ptr6" -> "field_div0_ptr3" ;
"field_div0_ptr5" [label="5: Prune (true branch) \n   n$0=*&x:class X * [line 48]\n  PRUNE((n$0 != 0), true); [line 48]\n " shape="invhouse"]
	

	 "field_div0_ptr5" -> "field_div0_ptr8" ;
"field_div0_ptr4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "field_div0_ptr4" -> "field_div0_ptr2" ;
"field_div0_ptr3" [label="3: + \n  " ]
	

	 "field_div0_ptr3" -> "field_div0_ptr4" ;
"field_div0_ptr2" [label="2: Exit field_div0_ptr \n  " color=yellow style=filled]
	

"field_div0_ptr1" [label="1: Start field_div0_ptr\nFormals:  x:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 47]\n " color=yellow style=filled]
	

	 "field_div0_ptr1" -> "field_div0_ptr5" ;
	 "field_div0_ptr1" -> "field_div0_ptr6" ;
"set_field_ptr3" [label="3:  BinaryOperatorStmt: Assign \n   n$0=*&x:class X * [line 21]\n  n$1=*&val:int  [line 21]\n  *n$0.f:int =n$1 [line 21]\n " shape="box"]
	

	 "set_field_ptr3" -> "set_field_ptr2" ;
"set_field_ptr2" [label="2: Exit set_field_ptr \n  " color=yellow style=filled]
	

"set_field_ptr1" [label="1: Start set_field_ptr\nFormals:  x:class X * val:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 21]\n " color=yellow style=filled]
	

	 "set_field_ptr1" -> "set_field_ptr3" ;
"field_div0_ref4" [label="4:  Call _fun_set_field_ref \n   n$3=*&x:class X & [line 96]\n  _fun_set_field_ref(n$3:class X &,0:int ) [line 96]\n " shape="box"]
	

	 "field_div0_ref4" -> "field_div0_ref3" ;
"field_div0_ref3" [label="3:  Return Stmt \n   n$0=*&x:class X & [line 97]\n  _=*n$0:class X  [line 97]\n  n$2=_fun_X_div(n$0:class X &) [line 97]\n  *&return:int =n$2 [line 97]\n " shape="box"]
	

	 "field_div0_ref3" -> "field_div0_ref2" ;
"field_div0_ref2" [label="2: Exit field_div0_ref \n  " color=yellow style=filled]
	

"field_div0_ref1" [label="1: Start field_div0_ref\nFormals:  x:class X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 95]\n " color=yellow style=filled]
	

	 "field_div0_ref1" -> "field_div0_ref4" ;
"get_global_ptr_div0_field5" [label="5:  Call _fun_X_nonzero \n   n$4=_fun_get_global_ptr() [line 74]\n  _=*n$4:class X  [line 74]\n  _fun_X_nonzero(n$4:class X *) [line 74]\n " shape="box"]
	

	 "get_global_ptr_div0_field5" -> "get_global_ptr_div0_field4" ;
"get_global_ptr_div0_field4" [label="4:  BinaryOperatorStmt: Assign \n   n$3=_fun_get_global_ptr() [line 75]\n  *n$3.f:int =0 [line 75]\n " shape="box"]
	

	 "get_global_ptr_div0_field4" -> "get_global_ptr_div0_field3" ;
"get_global_ptr_div0_field3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ptr() [line 76]\n  _=*n$0:class X  [line 76]\n  n$2=_fun_X_div(n$0:class X *) [line 76]\n " shape="box"]
	

	 "get_global_ptr_div0_field3" -> "get_global_ptr_div0_field2" ;
"get_global_ptr_div0_field2" [label="2: Exit get_global_ptr_div0_field \n  " color=yellow style=filled]
	

"get_global_ptr_div0_field1" [label="1: Start get_global_ptr_div0_field\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 73]\n " color=yellow style=filled]
	

	 "get_global_ptr_div0_field1" -> "get_global_ptr_div0_field5" ;
"field_div1_ref4" [label="4:  Call _fun_set_field_ref \n   n$3=*&x:class X & [line 101]\n  _fun_set_field_ref(n$3:class X &,1:int ) [line 101]\n " shape="box"]
	

	 "field_div1_ref4" -> "field_div1_ref3" ;
"field_div1_ref3" [label="3:  Return Stmt \n   n$0=*&x:class X & [line 102]\n  _=*n$0:class X  [line 102]\n  n$2=_fun_X_div(n$0:class X &) [line 102]\n  *&return:int =n$2 [line 102]\n " shape="box"]
	

	 "field_div1_ref3" -> "field_div1_ref2" ;
"field_div1_ref2" [label="2: Exit field_div1_ref \n  " color=yellow style=filled]
	

"field_div1_ref1" [label="1: Start field_div1_ref\nFormals:  x:class X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 100]\n " color=yellow style=filled]
	

	 "field_div1_ref1" -> "field_div1_ref4" ;
"field_div1_ptr8" [label="8:  Call _fun_set_field_ptr \n   n$4=*&x:class X * [line 56]\n  _fun_set_field_ptr(n$4:class X *,1:int ) [line 56]\n " shape="box"]
	

	 "field_div1_ptr8" -> "field_div1_ptr7" ;
"field_div1_ptr7" [label="7:  Return Stmt \n   n$1=*&x:class X * [line 57]\n  _=*n$1:class X  [line 57]\n  n$3=_fun_X_div(n$1:class X *) [line 57]\n  *&return:int =n$3 [line 57]\n " shape="box"]
	

	 "field_div1_ptr7" -> "field_div1_ptr2" ;
"field_div1_ptr6" [label="6: Prune (false branch) \n   n$0=*&x:class X * [line 55]\n  PRUNE((n$0 == 0), false); [line 55]\n " shape="invhouse"]
	

	 "field_div1_ptr6" -> "field_div1_ptr3" ;
"field_div1_ptr5" [label="5: Prune (true branch) \n   n$0=*&x:class X * [line 55]\n  PRUNE((n$0 != 0), true); [line 55]\n " shape="invhouse"]
	

	 "field_div1_ptr5" -> "field_div1_ptr8" ;
"field_div1_ptr4" [label="4:  between_join_and_exit \n  " shape="box"]
	

	 "field_div1_ptr4" -> "field_div1_ptr2" ;
"field_div1_ptr3" [label="3: + \n  " ]
	

	 "field_div1_ptr3" -> "field_div1_ptr4" ;
"field_div1_ptr2" [label="2: Exit field_div1_ptr \n  " color=yellow style=filled]
	

"field_div1_ptr1" [label="1: Start field_div1_ptr\nFormals:  x:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 54]\n " color=yellow style=filled]
	

	 "field_div1_ptr1" -> "field_div1_ptr5" ;
	 "field_div1_ptr1" -> "field_div1_ptr6" ;
"nonzero_ptr3" [label="3:  Call _fun_X_nonzero \n   n$0=*&x:class X * [line 19]\n  _=*n$0:class X  [line 19]\n  _fun_X_nonzero(n$0:class X *) [line 19]\n " shape="box"]
	

	 "nonzero_ptr3" -> "nonzero_ptr2" ;
"nonzero_ptr2" [label="2: Exit nonzero_ptr \n  " color=yellow style=filled]
	

"nonzero_ptr1" [label="1: Start nonzero_ptr\nFormals:  x:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 19]\n " color=yellow style=filled]
	

	 "nonzero_ptr1" -> "nonzero_ptr3" ;
"method_div1_ref4" [label="4:  Call _fun_nonzero_ref \n   n$3=*&x:class X & [line 91]\n  _fun_nonzero_ref(n$3:class X &) [line 91]\n " shape="box"]
	

	 "method_div1_ref4" -> "method_div1_ref3" ;
"method_div1_ref3" [label="3:  Return Stmt \n   n$0=*&x:class X & [line 92]\n  _=*n$0:class X  [line 92]\n  n$2=_fun_X_div(n$0:class X &) [line 92]\n  *&return:int =n$2 [line 92]\n " shape="box"]
	

	 "method_div1_ref3" -> "method_div1_ref2" ;
"method_div1_ref2" [label="2: Exit method_div1_ref \n  " color=yellow style=filled]
	

"method_div1_ref1" [label="1: Start method_div1_ref\nFormals:  x:class X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 90]\n " color=yellow style=filled]
	

	 "method_div1_ref1" -> "method_div1_ref4" ;
"nonzero_ref3" [label="3:  Call _fun_X_nonzero \n   n$0=*&x:class X & [line 25]\n  _=*n$0:class X  [line 25]\n  _fun_X_nonzero(n$0:class X &) [line 25]\n " shape="box"]
	

	 "nonzero_ref3" -> "nonzero_ref2" ;
"nonzero_ref2" [label="2: Exit nonzero_ref \n  " color=yellow style=filled]
	

"nonzero_ref1" [label="1: Start nonzero_ref\nFormals:  x:class X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 25]\n " color=yellow style=filled]
	

	 "nonzero_ref1" -> "nonzero_ref3" ;
"get_global_ref_div1_method5" [label="5:  BinaryOperatorStmt: Assign \n   n$5=_fun_get_global_ref() [line 112]\n  *n$5.f:int =0 [line 112]\n " shape="box"]
	

	 "get_global_ref_div1_method5" -> "get_global_ref_div1_method4" ;
"get_global_ref_div1_method4" [label="4:  Call _fun_X_nonzero \n   n$3=_fun_get_global_ref() [line 113]\n  _=*n$3:class X  [line 113]\n  _fun_X_nonzero(n$3:class X &) [line 113]\n " shape="box"]
	

	 "get_global_ref_div1_method4" -> "get_global_ref_div1_method3" ;
"get_global_ref_div1_method3" [label="3:  Call _fun_X_div \n   n$0=_fun_get_global_ref() [line 114]\n  _=*n$0:class X  [line 114]\n  n$2=_fun_X_div(n$0:class X &) [line 114]\n " shape="box"]
	

	 "get_global_ref_div1_method3" -> "get_global_ref_div1_method2" ;
"get_global_ref_div1_method2" [label="2: Exit get_global_ref_div1_method \n  " color=yellow style=filled]
	

"get_global_ref_div1_method1" [label="1: Start get_global_ref_div1_method\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 111]\n " color=yellow style=filled]
	

	 "get_global_ref_div1_method1" -> "get_global_ref_div1_method5" ;
}
