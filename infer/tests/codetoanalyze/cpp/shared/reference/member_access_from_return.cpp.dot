/* @generated */
digraph iCFG {
"__infer_globals_initializer_global3" [label="3:  DeclStmt \n   _fun_X_X(&#GB<shared/reference/member_access_from_return.cpp>$global:class X *) [line 15]\n " shape="box"]
	

	 "__infer_globals_initializer_global3" -> "__infer_globals_initializer_global2" ;
"__infer_globals_initializer_global2" [label="2: Exit __infer_globals_initializer_global \n  " color=yellow style=filled]
	

"__infer_globals_initializer_global1" [label="1: Start __infer_globals_initializer_global\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 15]\n " color=yellow style=filled]
	

	 "__infer_globals_initializer_global1" -> "__infer_globals_initializer_global3" ;
"X_X2" [label="2: Exit X_X \n  " color=yellow style=filled]
	

"X_X1" [label="1: Start X_X\nFormals:  this:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 10]\n " color=yellow style=filled]
	

	 "X_X1" -> "X_X2" ;
"get_ptr3" [label="3:  Return Stmt \n   *&return:class X *=&#GB<shared/reference/member_access_from_return.cpp>$global [line 16]\n " shape="box"]
	

	 "get_ptr3" -> "get_ptr2" ;
"get_ptr2" [label="2: Exit get_ptr \n  " color=yellow style=filled]
	

"get_ptr1" [label="1: Start get_ptr\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 16]\n " color=yellow style=filled]
	

	 "get_ptr1" -> "get_ptr3" ;
"test_ref4" [label="4:  DeclStmt \n   n$3=_fun_get_ref() [line 20]\n  n$4=*n$3.f:int  [line 20]\n  *&f:int =n$4 [line 20]\n " shape="box"]
	

	 "test_ref4" -> "test_ref3" ;
"test_ref3" [label="3:  DeclStmt \n   n$0=_fun_get_ref() [line 21]\n  _=*n$0:class X  [line 21]\n  n$2=_fun_X_call(n$0:class X &) [line 21]\n  *&c:int =n$2 [line 21]\n " shape="box"]
	

	 "test_ref3" -> "test_ref2" ;
"test_ref2" [label="2: Exit test_ref \n  " color=yellow style=filled]
	

"test_ref1" [label="1: Start test_ref\nFormals: \nLocals:  c:int  f:int  \n   DECLARE_LOCALS(&return,&c,&f); [line 19]\n " color=yellow style=filled]
	

	 "test_ref1" -> "test_ref4" ;
"get_ref3" [label="3:  Return Stmt \n   *&return:class X &=&#GB<shared/reference/member_access_from_return.cpp>$global [line 17]\n " shape="box"]
	

	 "get_ref3" -> "get_ref2" ;
"get_ref2" [label="2: Exit get_ref \n  " color=yellow style=filled]
	

"get_ref1" [label="1: Start get_ref\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 17]\n " color=yellow style=filled]
	

	 "get_ref1" -> "get_ref3" ;
"test_ptr4" [label="4:  DeclStmt \n   n$3=_fun_get_ptr() [line 25]\n  n$4=*n$3.f:int  [line 25]\n  *&f:int =n$4 [line 25]\n " shape="box"]
	

	 "test_ptr4" -> "test_ptr3" ;
"test_ptr3" [label="3:  DeclStmt \n   n$0=_fun_get_ptr() [line 26]\n  _=*n$0:class X  [line 26]\n  n$2=_fun_X_call(n$0:class X *) [line 26]\n  *&c:int =n$2 [line 26]\n " shape="box"]
	

	 "test_ptr3" -> "test_ptr2" ;
"test_ptr2" [label="2: Exit test_ptr \n  " color=yellow style=filled]
	

"test_ptr1" [label="1: Start test_ptr\nFormals: \nLocals:  c:int  f:int  \n   DECLARE_LOCALS(&return,&c,&f); [line 24]\n " color=yellow style=filled]
	

	 "test_ptr1" -> "test_ptr4" ;
"X_call3" [label="3:  Return Stmt \n   n$0=*&this:class X * [line 12]\n  n$1=*n$0.f:int  [line 12]\n  *&return:int =n$1 [line 12]\n " shape="box"]
	

	 "X_call3" -> "X_call2" ;
"X_call2" [label="2: Exit X_call \n  " color=yellow style=filled]
	

"X_call1" [label="1: Start X_call\nFormals:  this:class X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 "X_call1" -> "X_call3" ;
}
