/* @generated */
digraph iCFG {
"div0_namespace_resolution3" [label="3:  Return Stmt \n   n$0=_fun_f1::get() [line 24]\n  n$1=_fun_f2::get() [line 24]\n  *&return:int =(1 / (n$0 + n$1)) [line 24]\n " shape="box"]
	

	 "div0_namespace_resolution3" -> "div0_namespace_resolution2" ;
"div0_namespace_resolution2" [label="2: Exit div0_namespace_resolution \n  " color=yellow style=filled]
	

"div0_namespace_resolution1" [label="1: Start div0_namespace_resolution\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 24]\n " color=yellow style=filled]
	

	 "div0_namespace_resolution1" -> "div0_namespace_resolution3" ;
"div0_using3" [label="3:  Return Stmt \n   n$0=_fun_f1::get0() [line 21]\n  *&return:int =(1 / n$0) [line 21]\n " shape="box"]
	

	 "div0_using3" -> "div0_using2" ;
"div0_using2" [label="2: Exit div0_using \n  " color=yellow style=filled]
	

"div0_using1" [label="1: Start div0_using\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 19]\n " color=yellow style=filled]
	

	 "div0_using1" -> "div0_using3" ;
"f1::get03" [label="3:  Return Stmt \n   *&return:int =0 [line 12]\n " shape="box"]
	

	 "f1::get03" -> "f1::get02" ;
"f1::get02" [label="2: Exit f1::get0 \n  " color=yellow style=filled]
	

"f1::get01" [label="1: Start f1::get0\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 12]\n " color=yellow style=filled]
	

	 "f1::get01" -> "f1::get03" ;
"f1::get3" [label="3:  Return Stmt \n   *&return:int =1 [line 11]\n " shape="box"]
	

	 "f1::get3" -> "f1::get2" ;
"f1::get2" [label="2: Exit f1::get \n  " color=yellow style=filled]
	

"f1::get1" [label="1: Start f1::get\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 11]\n " color=yellow style=filled]
	

	 "f1::get1" -> "f1::get3" ;
"f2::get3" [label="3:  Return Stmt \n   *&return:int =-1 [line 16]\n " shape="box"]
	

	 "f2::get3" -> "f2::get2" ;
"f2::get2" [label="2: Exit f2::get \n  " color=yellow style=filled]
	

"f2::get1" [label="1: Start f2::get\nFormals: \nLocals:  \n   DECLARE_LOCALS(&return); [line 16]\n " color=yellow style=filled]
	

	 "f2::get1" -> "f2::get3" ;
}
