/* @generated */
digraph iCFG {
"MyHasher_hash3" [label="3:  Return Stmt \n   *&return:int =1 [line 11]\n " shape="box"]
	

	 "MyHasher_hash3" -> "MyHasher_hash2" ;
"MyHasher_hash2" [label="2: Exit MyHasher_hash \n  " color=yellow style=filled]
	

"MyHasher_hash1" [label="1: Start MyHasher_hash\nFormals:  t:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 11]\n " color=yellow style=filled]
	

	 "MyHasher_hash1" -> "MyHasher_hash3" ;
"__infer_globals_initializer_test3" [label="3:  DeclStmt \n   *&0$?%__sil_tmpSIL_materialize_temp__n$0:int =0 [line 23]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$1:int =0 [line 23]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$2:int =0 [line 23]\n  n$3=_fun_hash_combine_generic<MyHasher,_int,_int,_int>(&0$?%__sil_tmpSIL_materialize_temp__n$0:int &,&0$?%__sil_tmpSIL_materialize_temp__n$1:int &,&0$?%__sil_tmpSIL_materialize_temp__n$2:int &) [line 23]\n  *&#GB<shared/templates/sizeof_pack.cpp>$test:int =n$3 [line 23]\n " shape="box"]
	

	 "__infer_globals_initializer_test3" -> "__infer_globals_initializer_test2" ;
"__infer_globals_initializer_test2" [label="2: Exit __infer_globals_initializer_test \n  " color=yellow style=filled]
	

"__infer_globals_initializer_test1" [label="1: Start __infer_globals_initializer_test\nFormals: \nLocals:  0$?%__sil_tmpSIL_materialize_temp__n$0:int  0$?%__sil_tmpSIL_materialize_temp__n$1:int  0$?%__sil_tmpSIL_materialize_temp__n$2:int  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmpSIL_materialize_temp__n$0,&0$?%__sil_tmpSIL_materialize_temp__n$1,&0$?%__sil_tmpSIL_materialize_temp__n$2); [line 23]\n " color=yellow style=filled]
	

	 "__infer_globals_initializer_test1" -> "__infer_globals_initializer_test3" ;
"hash_combine_generic<MyHasher,_int,_int,_int>8" [label="8:  DeclStmt \n   n$1=*&t:int & [line 16]\n  n$2=*n$1:int  [line 16]\n  n$3=_fun_MyHasher_hash(n$2:int ) [line 16]\n  *&seed:int =n$3 [line 16]\n " shape="box"]
	

	 "hash_combine_generic<MyHasher,_int,_int,_int>8" -> "hash_combine_generic<MyHasher,_int,_int,_int>5" ;
	 "hash_combine_generic<MyHasher,_int,_int,_int>8" -> "hash_combine_generic<MyHasher,_int,_int,_int>6" ;
"hash_combine_generic<MyHasher,_int,_int,_int>7" [label="7:  Return Stmt \n   n$0=*&seed:int  [line 18]\n  *&return:int =n$0 [line 18]\n " shape="box"]
	

	 "hash_combine_generic<MyHasher,_int,_int,_int>7" -> "hash_combine_generic<MyHasher,_int,_int,_int>2" ;
"hash_combine_generic<MyHasher,_int,_int,_int>6" [label="6: Prune (false branch) \n   PRUNE(((_t$0 == 0) == 0), false); [line 17]\n " shape="invhouse"]
	

	 "hash_combine_generic<MyHasher,_int,_int,_int>6" -> "hash_combine_generic<MyHasher,_int,_int,_int>4" ;
"hash_combine_generic<MyHasher,_int,_int,_int>5" [label="5: Prune (true branch) \n   PRUNE(((_t$0 == 0) != 0), true); [line 17]\n " shape="invhouse"]
	

	 "hash_combine_generic<MyHasher,_int,_int,_int>5" -> "hash_combine_generic<MyHasher,_int,_int,_int>7" ;
"hash_combine_generic<MyHasher,_int,_int,_int>4" [label="4: + \n  " ]
	

	 "hash_combine_generic<MyHasher,_int,_int,_int>4" -> "hash_combine_generic<MyHasher,_int,_int,_int>3" ;
"hash_combine_generic<MyHasher,_int,_int,_int>3" [label="3:  Return Stmt \n   *&return:int =0 [line 20]\n " shape="box"]
	

	 "hash_combine_generic<MyHasher,_int,_int,_int>3" -> "hash_combine_generic<MyHasher,_int,_int,_int>2" ;
"hash_combine_generic<MyHasher,_int,_int,_int>2" [label="2: Exit hash_combine_generic<MyHasher,_int,_int,_int> \n  " color=yellow style=filled]
	

"hash_combine_generic<MyHasher,_int,_int,_int>1" [label="1: Start hash_combine_generic<MyHasher,_int,_int,_int>\nFormals:  t:int & ts:int & ts:int &\nLocals:  seed:int  \n   DECLARE_LOCALS(&return,&seed); [line 15]\n " color=yellow style=filled]
	

	 "hash_combine_generic<MyHasher,_int,_int,_int>1" -> "hash_combine_generic<MyHasher,_int,_int,_int>8" ;
}
