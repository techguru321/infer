/* @generated */
digraph iCFG {
"copy_move_constructor::getX5" [label="5:  DeclStmt \n   _fun_copy_move_constructor::X_X(&x:class copy_move_constructor::X *) [line 30]\n " shape="box"]
	

	 "copy_move_constructor::getX5" -> "copy_move_constructor::getX4" ;
"copy_move_constructor::getX4" [label="4:  BinaryOperatorStmt: Assign \n   n$1=*&f:int  [line 31]\n  *&x.f:int =n$1 [line 31]\n " shape="box"]
	

	 "copy_move_constructor::getX4" -> "copy_move_constructor::getX3" ;
"copy_move_constructor::getX3" [label="3:  Return Stmt \n   n$0=*&__return_param:class copy_move_constructor::X * [line 32]\n  _fun_copy_move_constructor::X_X(n$0:class copy_move_constructor::X *,&x:class copy_move_constructor::X &) [line 32]\n " shape="box"]
	

	 "copy_move_constructor::getX3" -> "copy_move_constructor::getX2" ;
"copy_move_constructor::getX2" [label="2: Exit copy_move_constructor::getX \n  " color=yellow style=filled]
	

"copy_move_constructor::getX1" [label="1: Start copy_move_constructor::getX\nFormals:  f:int  __return_param:class copy_move_constructor::X *\nLocals:  x:class copy_move_constructor::X  \n   DECLARE_LOCALS(&return,&x); [line 29]\n " color=yellow style=filled]
	

	 "copy_move_constructor::getX1" -> "copy_move_constructor::getX5" ;
"copy_move_constructor::moveY_div03" [label="3:  Return Stmt \n   _fun_copy_move_constructor::getY(1:int ,&0$?%__sil_tmp__temp_return_n$1:class copy_move_constructor::Y *) [line 57]\n  n$2=*&0$?%__sil_tmp__temp_return_n$1.f:int  [line 57]\n  *&return:int =(1 / n$2) [line 57]\n " shape="box"]
	

	 "copy_move_constructor::moveY_div03" -> "copy_move_constructor::moveY_div02" ;
"copy_move_constructor::moveY_div02" [label="2: Exit copy_move_constructor::moveY_div0 \n  " color=yellow style=filled]
	

"copy_move_constructor::moveY_div01" [label="1: Start copy_move_constructor::moveY_div0\nFormals: \nLocals:  0$?%__sil_tmp__temp_return_n$1:class copy_move_constructor::Y  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmp__temp_return_n$1); [line 57]\n " color=yellow style=filled]
	

	 "copy_move_constructor::moveY_div01" -> "copy_move_constructor::moveY_div03" ;
"copy_move_constructor::moveX_div03" [label="3:  Return Stmt \n   _fun_copy_move_constructor::getX(0:int ,&0$?%__sil_tmp__temp_return_n$1:class copy_move_constructor::X *) [line 48]\n  n$2=*&0$?%__sil_tmp__temp_return_n$1.f:int  [line 48]\n  *&return:int =(1 / n$2) [line 48]\n " shape="box"]
	

	 "copy_move_constructor::moveX_div03" -> "copy_move_constructor::moveX_div02" ;
"copy_move_constructor::moveX_div02" [label="2: Exit copy_move_constructor::moveX_div0 \n  " color=yellow style=filled]
	

"copy_move_constructor::moveX_div01" [label="1: Start copy_move_constructor::moveX_div0\nFormals: \nLocals:  0$?%__sil_tmp__temp_return_n$1:class copy_move_constructor::X  \n   DECLARE_LOCALS(&return,&0$?%__sil_tmp__temp_return_n$1); [line 48]\n " color=yellow style=filled]
	

	 "copy_move_constructor::moveX_div01" -> "copy_move_constructor::moveX_div03" ;
"copy_move_constructor::Y_Y2" [label="2: Exit copy_move_constructor::Y_Y \n  " color=yellow style=filled]
	

"copy_move_constructor::Y_Y1" [label="1: Start copy_move_constructor::Y_Y\nFormals:  this:class copy_move_constructor::Y *\nLocals:  \n   DECLARE_LOCALS(&return); [line 23]\n " color=yellow style=filled]
	

	 "copy_move_constructor::Y_Y1" -> "copy_move_constructor::Y_Y2" ;
"copy_move_constructor::copyX_moveX_div18" [label="8:  DeclStmt \n   _fun_copy_move_constructor::X_X(&x1:class copy_move_constructor::X *) [line 66]\n " shape="box"]
	

	 "copy_move_constructor::copyX_moveX_div18" -> "copy_move_constructor::copyX_moveX_div17" ;
"copy_move_constructor::copyX_moveX_div17" [label="7:  BinaryOperatorStmt: Assign \n   *&x1.f:int =1 [line 67]\n " shape="box"]
	

	 "copy_move_constructor::copyX_moveX_div17" -> "copy_move_constructor::copyX_moveX_div16" ;
"copy_move_constructor::copyX_moveX_div16" [label="6:  DeclStmt \n   _fun_copy_move_constructor::X_X(&x2:class copy_move_constructor::X *,&x1:class copy_move_constructor::X &) [line 68]\n " shape="box"]
	

	 "copy_move_constructor::copyX_moveX_div16" -> "copy_move_constructor::copyX_moveX_div15" ;
"copy_move_constructor::copyX_moveX_div15" [label="5:  DeclStmt \n   n$5=*&x2.f:int  [line 69]\n  *&d1:int =(1 / n$5) [line 69]\n " shape="box"]
	

	 "copy_move_constructor::copyX_moveX_div15" -> "copy_move_constructor::copyX_moveX_div14" ;
"copy_move_constructor::copyX_moveX_div14" [label="4:  DeclStmt \n   _fun_copy_move_constructor::getX(1:int ,&0$?%__sil_tmp__temp_return_n$3:class copy_move_constructor::X *) [line 70]\n  n$4=*&0$?%__sil_tmp__temp_return_n$3.f:int  [line 70]\n  *&d2:int =(1 / n$4) [line 70]\n " shape="box"]
	

	 "copy_move_constructor::copyX_moveX_div14" -> "copy_move_constructor::copyX_moveX_div13" ;
"copy_move_constructor::copyX_moveX_div13" [label="3:  Return Stmt \n   n$0=*&d1:int  [line 71]\n  n$1=*&d2:int  [line 71]\n  *&return:int =(n$0 + n$1) [line 71]\n " shape="box"]
	

	 "copy_move_constructor::copyX_moveX_div13" -> "copy_move_constructor::copyX_moveX_div12" ;
"copy_move_constructor::copyX_moveX_div12" [label="2: Exit copy_move_constructor::copyX_moveX_div1 \n  " color=yellow style=filled]
	

"copy_move_constructor::copyX_moveX_div11" [label="1: Start copy_move_constructor::copyX_moveX_div1\nFormals: \nLocals:  d2:int  0$?%__sil_tmp__temp_return_n$3:class copy_move_constructor::X  d1:int  x2:class copy_move_constructor::X  x1:class copy_move_constructor::X  \n   DECLARE_LOCALS(&return,&d2,&0$?%__sil_tmp__temp_return_n$3,&d1,&x2,&x1); [line 65]\n " color=yellow style=filled]
	

	 "copy_move_constructor::copyX_moveX_div11" -> "copy_move_constructor::copyX_moveX_div18" ;
"copy_move_constructor::Y_Y3" [label="3:  Constructor Init \n   n$0=*&this:class copy_move_constructor::Y * [line 24]\n  n$1=*&y:class copy_move_constructor::Y & [line 24]\n  n$2=*n$1.f:int  [line 24]\n  *n$0.f:int =n$2 [line 24]\n " shape="box"]
	

	 "copy_move_constructor::Y_Y3" -> "copy_move_constructor::Y_Y2" ;
"copy_move_constructor::Y_Y2" [label="2: Exit copy_move_constructor::Y_Y \n  " color=yellow style=filled]
	

"copy_move_constructor::Y_Y1" [label="1: Start copy_move_constructor::Y_Y\nFormals:  this:class copy_move_constructor::Y * y:class copy_move_constructor::Y &\nLocals:  \n   DECLARE_LOCALS(&return); [line 24]\n " color=yellow style=filled]
	

	 "copy_move_constructor::Y_Y1" -> "copy_move_constructor::Y_Y3" ;
"copy_move_constructor::getY5" [label="5:  DeclStmt \n   _fun_copy_move_constructor::Y_Y(&y:class copy_move_constructor::Y *) [line 36]\n " shape="box"]
	

	 "copy_move_constructor::getY5" -> "copy_move_constructor::getY4" ;
"copy_move_constructor::getY4" [label="4:  BinaryOperatorStmt: Assign \n   n$1=*&f:int  [line 37]\n  *&y.f:int =n$1 [line 37]\n " shape="box"]
	

	 "copy_move_constructor::getY4" -> "copy_move_constructor::getY3" ;
"copy_move_constructor::getY3" [label="3:  Return Stmt \n   n$0=*&__return_param:class copy_move_constructor::Y * [line 38]\n  _fun_copy_move_constructor::Y_Y(n$0:class copy_move_constructor::Y *,&y:class copy_move_constructor::Y &) [line 38]\n " shape="box"]
	

	 "copy_move_constructor::getY3" -> "copy_move_constructor::getY2" ;
"copy_move_constructor::getY2" [label="2: Exit copy_move_constructor::getY \n  " color=yellow style=filled]
	

"copy_move_constructor::getY1" [label="1: Start copy_move_constructor::getY\nFormals:  f:int  __return_param:class copy_move_constructor::Y *\nLocals:  y:class copy_move_constructor::Y  \n   DECLARE_LOCALS(&return,&y); [line 35]\n " color=yellow style=filled]
	

	 "copy_move_constructor::getY1" -> "copy_move_constructor::getY5" ;
"copy_move_constructor::copyY_moveY_div18" [label="8:  DeclStmt \n   _fun_copy_move_constructor::Y_Y(&y1:class copy_move_constructor::Y *) [line 75]\n " shape="box"]
	

	 "copy_move_constructor::copyY_moveY_div18" -> "copy_move_constructor::copyY_moveY_div17" ;
"copy_move_constructor::copyY_moveY_div17" [label="7:  BinaryOperatorStmt: Assign \n   *&y1.f:int =1 [line 76]\n " shape="box"]
	

	 "copy_move_constructor::copyY_moveY_div17" -> "copy_move_constructor::copyY_moveY_div16" ;
"copy_move_constructor::copyY_moveY_div16" [label="6:  DeclStmt \n   _fun_copy_move_constructor::Y_Y(&y2:class copy_move_constructor::Y *,&y1:class copy_move_constructor::Y &) [line 77]\n " shape="box"]
	

	 "copy_move_constructor::copyY_moveY_div16" -> "copy_move_constructor::copyY_moveY_div15" ;
"copy_move_constructor::copyY_moveY_div15" [label="5:  DeclStmt \n   n$5=*&y2.f:int  [line 78]\n  *&d1:int =(1 / n$5) [line 78]\n " shape="box"]
	

	 "copy_move_constructor::copyY_moveY_div15" -> "copy_move_constructor::copyY_moveY_div14" ;
"copy_move_constructor::copyY_moveY_div14" [label="4:  DeclStmt \n   _fun_copy_move_constructor::getY(2:int ,&0$?%__sil_tmp__temp_return_n$3:class copy_move_constructor::Y *) [line 79]\n  n$4=*&0$?%__sil_tmp__temp_return_n$3.f:int  [line 79]\n  *&d2:int =(1 / n$4) [line 79]\n " shape="box"]
	

	 "copy_move_constructor::copyY_moveY_div14" -> "copy_move_constructor::copyY_moveY_div13" ;
"copy_move_constructor::copyY_moveY_div13" [label="3:  Return Stmt \n   n$0=*&d1:int  [line 80]\n  n$1=*&d2:int  [line 80]\n  *&return:int =(n$0 + n$1) [line 80]\n " shape="box"]
	

	 "copy_move_constructor::copyY_moveY_div13" -> "copy_move_constructor::copyY_moveY_div12" ;
"copy_move_constructor::copyY_moveY_div12" [label="2: Exit copy_move_constructor::copyY_moveY_div1 \n  " color=yellow style=filled]
	

"copy_move_constructor::copyY_moveY_div11" [label="1: Start copy_move_constructor::copyY_moveY_div1\nFormals: \nLocals:  d2:int  0$?%__sil_tmp__temp_return_n$3:class copy_move_constructor::Y  d1:int  y2:class copy_move_constructor::Y  y1:class copy_move_constructor::Y  \n   DECLARE_LOCALS(&return,&d2,&0$?%__sil_tmp__temp_return_n$3,&d1,&y2,&y1); [line 74]\n " color=yellow style=filled]
	

	 "copy_move_constructor::copyY_moveY_div11" -> "copy_move_constructor::copyY_moveY_div18" ;
"copy_move_constructor::X_X3" [label="3:  Constructor Init \n   n$0=*&this:class copy_move_constructor::X * [line 15]\n  n$1=*&__param_0:class copy_move_constructor::X & [line 15]\n  n$2=*n$1.f:int  [line 15]\n  *n$0.f:int =n$2 [line 15]\n " shape="box"]
	

	 "copy_move_constructor::X_X3" -> "copy_move_constructor::X_X2" ;
"copy_move_constructor::X_X2" [label="2: Exit copy_move_constructor::X_X \n  " color=yellow style=filled]
	

"copy_move_constructor::X_X1" [label="1: Start copy_move_constructor::X_X\nFormals:  this:class copy_move_constructor::X * __param_0:class copy_move_constructor::X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 15]\n " color=yellow style=filled]
	

	 "copy_move_constructor::X_X1" -> "copy_move_constructor::X_X3" ;
"copy_move_constructor::Y_Y3" [label="3:  Constructor Init \n   n$0=*&this:class copy_move_constructor::Y * [line 26]\n  n$1=*&y:class copy_move_constructor::Y & [line 26]\n  n$2=*n$1.f:int  [line 26]\n  *n$0.f:int =(n$2 - 1) [line 26]\n " shape="box"]
	

	 "copy_move_constructor::Y_Y3" -> "copy_move_constructor::Y_Y2" ;
"copy_move_constructor::Y_Y2" [label="2: Exit copy_move_constructor::Y_Y \n  " color=yellow style=filled]
	

"copy_move_constructor::Y_Y1" [label="1: Start copy_move_constructor::Y_Y\nFormals:  this:class copy_move_constructor::Y * y:class copy_move_constructor::Y &\nLocals:  \n   DECLARE_LOCALS(&return); [line 26]\n " color=yellow style=filled]
	

	 "copy_move_constructor::Y_Y1" -> "copy_move_constructor::Y_Y3" ;
"copy_move_constructor::X_X2" [label="2: Exit copy_move_constructor::X_X \n  " color=yellow style=filled]
	

"copy_move_constructor::X_X1" [label="1: Start copy_move_constructor::X_X\nFormals:  this:class copy_move_constructor::X *\nLocals:  \n   DECLARE_LOCALS(&return); [line 15]\n " color=yellow style=filled]
	

	 "copy_move_constructor::X_X1" -> "copy_move_constructor::X_X2" ;
"copy_move_constructor::moveY_moveY_copyY_div05" [label="5:  DeclStmt \n   _fun_copy_move_constructor::getY(2:int ,&0$?%__sil_tmpSIL_materialize_temp__n$1:class copy_move_constructor::Y *) [line 60]\n  _fun_copy_move_constructor::Y_Y(&y1:class copy_move_constructor::Y *,&0$?%__sil_tmpSIL_materialize_temp__n$1:class copy_move_constructor::Y &) [line 60]\n " shape="box"]
	

	 "copy_move_constructor::moveY_moveY_copyY_div05" -> "copy_move_constructor::moveY_moveY_copyY_div04" ;
"copy_move_constructor::moveY_moveY_copyY_div04" [label="4:  DeclStmt \n   _fun_copy_move_constructor::Y_Y(&y2:class copy_move_constructor::Y *,&y1:class copy_move_constructor::Y &) [line 61]\n " shape="box"]
	

	 "copy_move_constructor::moveY_moveY_copyY_div04" -> "copy_move_constructor::moveY_moveY_copyY_div03" ;
"copy_move_constructor::moveY_moveY_copyY_div03" [label="3:  Return Stmt \n   n$0=*&y2.f:int  [line 62]\n  *&return:int =(1 / n$0) [line 62]\n " shape="box"]
	

	 "copy_move_constructor::moveY_moveY_copyY_div03" -> "copy_move_constructor::moveY_moveY_copyY_div02" ;
"copy_move_constructor::moveY_moveY_copyY_div02" [label="2: Exit copy_move_constructor::moveY_moveY_copyY_div0 \n  " color=yellow style=filled]
	

"copy_move_constructor::moveY_moveY_copyY_div01" [label="1: Start copy_move_constructor::moveY_moveY_copyY_div0\nFormals: \nLocals:  y2:class copy_move_constructor::Y  y1:class copy_move_constructor::Y  0$?%__sil_tmpSIL_materialize_temp__n$1:class copy_move_constructor::Y  \n   DECLARE_LOCALS(&return,&y2,&y1,&0$?%__sil_tmpSIL_materialize_temp__n$1); [line 59]\n " color=yellow style=filled]
	

	 "copy_move_constructor::moveY_moveY_copyY_div01" -> "copy_move_constructor::moveY_moveY_copyY_div05" ;
"copy_move_constructor::copyY_div06" [label="6:  DeclStmt \n   _fun_copy_move_constructor::Y_Y(&y1:class copy_move_constructor::Y *) [line 51]\n " shape="box"]
	

	 "copy_move_constructor::copyY_div06" -> "copy_move_constructor::copyY_div05" ;
"copy_move_constructor::copyY_div05" [label="5:  BinaryOperatorStmt: Assign \n   *&y1.f:int =0 [line 52]\n " shape="box"]
	

	 "copy_move_constructor::copyY_div05" -> "copy_move_constructor::copyY_div04" ;
"copy_move_constructor::copyY_div04" [label="4:  DeclStmt \n   _fun_copy_move_constructor::Y_Y(&y2:class copy_move_constructor::Y *,&y1:class copy_move_constructor::Y &) [line 53]\n " shape="box"]
	

	 "copy_move_constructor::copyY_div04" -> "copy_move_constructor::copyY_div03" ;
"copy_move_constructor::copyY_div03" [label="3:  Return Stmt \n   n$0=*&y2.f:int  [line 54]\n  *&return:int =(1 / n$0) [line 54]\n " shape="box"]
	

	 "copy_move_constructor::copyY_div03" -> "copy_move_constructor::copyY_div02" ;
"copy_move_constructor::copyY_div02" [label="2: Exit copy_move_constructor::copyY_div0 \n  " color=yellow style=filled]
	

"copy_move_constructor::copyY_div01" [label="1: Start copy_move_constructor::copyY_div0\nFormals: \nLocals:  y2:class copy_move_constructor::Y  y1:class copy_move_constructor::Y  \n   DECLARE_LOCALS(&return,&y2,&y1); [line 50]\n " color=yellow style=filled]
	

	 "copy_move_constructor::copyY_div01" -> "copy_move_constructor::copyY_div06" ;
"copy_move_constructor::copyX_div06" [label="6:  DeclStmt \n   _fun_copy_move_constructor::X_X(&x1:class copy_move_constructor::X *) [line 42]\n " shape="box"]
	

	 "copy_move_constructor::copyX_div06" -> "copy_move_constructor::copyX_div05" ;
"copy_move_constructor::copyX_div05" [label="5:  BinaryOperatorStmt: Assign \n   *&x1.f:int =0 [line 43]\n " shape="box"]
	

	 "copy_move_constructor::copyX_div05" -> "copy_move_constructor::copyX_div04" ;
"copy_move_constructor::copyX_div04" [label="4:  DeclStmt \n   _fun_copy_move_constructor::X_X(&x2:class copy_move_constructor::X *,&x1:class copy_move_constructor::X &) [line 44]\n " shape="box"]
	

	 "copy_move_constructor::copyX_div04" -> "copy_move_constructor::copyX_div03" ;
"copy_move_constructor::copyX_div03" [label="3:  Return Stmt \n   n$0=*&x2.f:int  [line 45]\n  *&return:int =(1 / n$0) [line 45]\n " shape="box"]
	

	 "copy_move_constructor::copyX_div03" -> "copy_move_constructor::copyX_div02" ;
"copy_move_constructor::copyX_div02" [label="2: Exit copy_move_constructor::copyX_div0 \n  " color=yellow style=filled]
	

"copy_move_constructor::copyX_div01" [label="1: Start copy_move_constructor::copyX_div0\nFormals: \nLocals:  x2:class copy_move_constructor::X  x1:class copy_move_constructor::X  \n   DECLARE_LOCALS(&return,&x2,&x1); [line 41]\n " color=yellow style=filled]
	

	 "copy_move_constructor::copyX_div01" -> "copy_move_constructor::copyX_div06" ;
"copy_move_constructor::X_X3" [label="3:  Constructor Init \n   n$0=*&this:class copy_move_constructor::X * [line 15]\n  n$1=*&__param_0:class copy_move_constructor::X & [line 15]\n  n$2=*n$1.f:int  [line 15]\n  *n$0.f:int =n$2 [line 15]\n " shape="box"]
	

	 "copy_move_constructor::X_X3" -> "copy_move_constructor::X_X2" ;
"copy_move_constructor::X_X2" [label="2: Exit copy_move_constructor::X_X \n  " color=yellow style=filled]
	

"copy_move_constructor::X_X1" [label="1: Start copy_move_constructor::X_X\nFormals:  this:class copy_move_constructor::X * __param_0:class copy_move_constructor::X &\nLocals:  \n   DECLARE_LOCALS(&return); [line 15]\n " color=yellow style=filled]
	

	 "copy_move_constructor::X_X1" -> "copy_move_constructor::X_X3" ;
}
