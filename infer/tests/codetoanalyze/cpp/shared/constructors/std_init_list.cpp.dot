/* @generated */
digraph iCFG {
"main3" [label="3:  DeclStmt \n   *&0$?%__sil_tmpSIL_materialize_temp__n$0[0]:int =1 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[1]:int =2 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[2]:int =3 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[3]:int =4 [line 24]\n  *&0$?%__sil_tmpSIL_materialize_temp__n$0[4]:int =5 [line 24]\n  n$1=_fun___infer_skip_function(&0$?%__sil_tmpSIL_materialize_temp__n$0:int [5]) [line 24]\n  _fun_X_X(&x:class X *,n$1:class std::initializer_list<int> ) [line 24]\n " shape="box"]
	

	 "main3" -> "main2" ;
"main2" [label="2: Exit main \n  " color=yellow style=filled]
	

"main1" [label="1: Start main\nFormals: \nLocals:  x:class X  0$?%__sil_tmpSIL_materialize_temp__n$0:int [5] \n   DECLARE_LOCALS(&return,&x,&0$?%__sil_tmpSIL_materialize_temp__n$0); [line 24]\n " color=yellow style=filled]
	

	 "main1" -> "main3" ;
"X_X9" [label="9:  BinaryOperatorStmt: Assign \n   n$8=*&this:class X * [line 16]\n  n$9=*&this:class X * [line 16]\n  n$10=*n$9.sum:int  [line 16]\n  n$11=*&i:int * [line 16]\n  n$12=*n$11:int  [line 16]\n  *n$8.sum:int =(n$10 + n$12) [line 16]\n " shape="box"]
	

	 "X_X9" -> "X_X5" ;
"X_X8" [label="8: Prune (false branch) \n   PRUNE(((n$4 != n$7) == 0), false); [line 15]\n " shape="invhouse"]
	

	 "X_X8" -> "X_X2" ;
"X_X7" [label="7: Prune (true branch) \n   PRUNE(((n$4 != n$7) != 0), true); [line 15]\n " shape="invhouse"]
	

	 "X_X7" -> "X_X9" ;
"X_X6" [label="6:  BinaryOperatorStmt: NE \n   n$4=*&i:int * [line 15]\n  n$5=*&list:class std::initializer_list<int> & [line 15]\n  _=*n$5:class std::initializer_list<int>  [line 15]\n  n$7=_fun_std::initializer_list<int>_end(n$5:class std::initializer_list<int> &) [line 15]\n " shape="box"]
	

	 "X_X6" -> "X_X7" ;
	 "X_X6" -> "X_X8" ;
"X_X5" [label="5:  UnaryOperator \n   n$3=*&i:int * [line 15]\n  *&i:int *=(n$3 + 1) [line 15]\n " shape="box"]
	

	 "X_X5" -> "X_X3" ;
"X_X4" [label="4:  DeclStmt \n   n$0=*&list:class std::initializer_list<int> & [line 15]\n  _=*n$0:class std::initializer_list<int>  [line 15]\n  n$2=_fun_std::initializer_list<int>_begin(n$0:class std::initializer_list<int> &) [line 15]\n  *&i:int *=n$2 [line 15]\n " shape="box"]
	

	 "X_X4" -> "X_X3" ;
"X_X3" [label="3: + \n  " ]
	

	 "X_X3" -> "X_X6" ;
"X_X2" [label="2: Exit X_X \n  " color=yellow style=filled]
	

"X_X1" [label="1: Start X_X\nFormals:  this:class X * list:class std::initializer_list<int> &\nLocals:  i:int * \n   DECLARE_LOCALS(&return,&i); [line 14]\n " color=yellow style=filled]
	

	 "X_X1" -> "X_X4" ;
"std::initializer_list<int>_end3" [label="3:  Return Stmt \n   n$0=*&this:class std::initializer_list<int> * [line 93]\n  n$1=*n$0.__begin_:int * [line 93]\n  n$2=*&this:class std::initializer_list<int> * [line 93]\n  n$3=*n$2.__size_:unsigned long  [line 93]\n  *&return:int *=(n$1 + n$3) [line 93]\n " shape="box"]
	

	 "std::initializer_list<int>_end3" -> "std::initializer_list<int>_end2" ;
"std::initializer_list<int>_end2" [label="2: Exit std::initializer_list<int>_end \n  " color=yellow style=filled]
	

"std::initializer_list<int>_end1" [label="1: Start std::initializer_list<int>_end\nFormals:  this:class std::initializer_list<int> *\nLocals:  \n   DECLARE_LOCALS(&return); [line 91]\n " color=yellow style=filled]
	

	 "std::initializer_list<int>_end1" -> "std::initializer_list<int>_end3" ;
"std::initializer_list<int>_begin3" [label="3:  Return Stmt \n   n$0=*&this:class std::initializer_list<int> * [line 89]\n  n$1=*n$0.__begin_:int * [line 89]\n  *&return:int *=n$1 [line 89]\n " shape="box"]
	

	 "std::initializer_list<int>_begin3" -> "std::initializer_list<int>_begin2" ;
"std::initializer_list<int>_begin2" [label="2: Exit std::initializer_list<int>_begin \n  " color=yellow style=filled]
	

"std::initializer_list<int>_begin1" [label="1: Start std::initializer_list<int>_begin\nFormals:  this:class std::initializer_list<int> *\nLocals:  \n   DECLARE_LOCALS(&return); [line 87]\n " color=yellow style=filled]
	

	 "std::initializer_list<int>_begin1" -> "std::initializer_list<int>_begin3" ;
}
