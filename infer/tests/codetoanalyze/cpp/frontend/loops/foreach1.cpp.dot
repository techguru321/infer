/* @generated */
digraph iCFG {
"vec_vec6" [label="6:  Constructor Init \n   n$4=*&this:class vec * [line 24]\n  _fun_iterator_iterator(n$4.begin_:class iterator *) [line 24]\n " shape="box"]
	

	 "vec_vec6" -> "vec_vec5" ;
"vec_vec5" [label="5:  Constructor Init \n   n$3=*&this:class vec * [line 24]\n  _fun_iterator_iterator(n$3.end_:class iterator *) [line 24]\n " shape="box"]
	

	 "vec_vec5" -> "vec_vec4" ;
"vec_vec4" [label="4:  BinaryOperatorStmt: Assign \n   n$2=*&this:class vec * [line 25]\n  *n$2.begin_.val:int =0 [line 25]\n " shape="box"]
	

	 "vec_vec4" -> "vec_vec3" ;
"vec_vec3" [label="3:  BinaryOperatorStmt: Assign \n   n$0=*&this:class vec * [line 26]\n  n$1=*&size:int  [line 26]\n  *n$0.end_.val:int =n$1 [line 26]\n " shape="box"]
	

	 "vec_vec3" -> "vec_vec2" ;
"vec_vec2" [label="2: Exit vec_vec \n  " color=yellow style=filled]
	

"vec_vec1" [label="1: Start vec_vec\nFormals:  this:class vec * size:int \nLocals:  \n   DECLARE_LOCALS(&return); [line 24]\n " color=yellow style=filled]
	

	 "vec_vec1" -> "vec_vec6" ;
"test13" [label="13:  DeclStmt \n   _fun_vec_vec(&vector:class vec *,10:int ) [line 36]\n " shape="box"]
	

	 "test13" -> "test12" ;
"test12" [label="12:  DeclStmt \n   *&__range:class vec &=&vector [line 37]\n " shape="box"]
	

	 "test12" -> "test5" ;
"test11" [label="11:  DeclStmt \n   n$15=_fun_iterator_operator*(&__begin:class iterator &) [line 37]\n  *&value:int =n$15 [line 37]\n " shape="box"]
	

	 "test11" -> "test10" ;
"test10" [label="10:  DeclStmt \n   n$13=*&value:int  [line 38]\n  n$14=*&value:int  [line 38]\n  *&temp:int =((n$13 * n$14) + 10) [line 38]\n " shape="box"]
	

	 "test10" -> "test6" ;
"test9" [label="9: Prune (false branch) \n   PRUNE((n$12 == 0), false); [line 37]\n " shape="invhouse"]
	

	 "test9" -> "test2" ;
"test8" [label="8: Prune (true branch) \n   PRUNE((n$12 != 0), true); [line 37]\n " shape="invhouse"]
	

	 "test8" -> "test11" ;
"test7" [label="7:  Call _fun_operator!= \n   _fun_iterator_iterator(&0$?%__sil_tmp__temp_construct_n$10:class iterator *,&__begin:class iterator &) [line 37]\n  _fun_iterator_iterator(&0$?%__sil_tmp__temp_construct_n$11:class iterator *,&__end:class iterator &) [line 37]\n  n$12=_fun_operator!=(&0$?%__sil_tmp__temp_construct_n$10:class iterator ,&0$?%__sil_tmp__temp_construct_n$11:class iterator ) [line 37]\n " shape="box"]
	

	 "test7" -> "test8" ;
	 "test7" -> "test9" ;
"test6" [label="6:  Call _fun_iterator_operator++ \n   _fun_iterator_operator++(&__begin:class iterator &,&0$?%__sil_tmp__temp_return_n$9:class iterator *) [line 37]\n " shape="box"]
	

	 "test6" -> "test3" ;
"test5" [label="5:  DeclStmt \n   n$5=*&__range:class vec & [line 37]\n  _=*n$5:class vec  [line 37]\n  _fun_vec_begin(n$5:class vec &,&0$?%__sil_tmpSIL_materialize_temp__n$4:class iterator *) [line 37]\n  _fun_iterator_iterator(&__begin:class iterator *,&0$?%__sil_tmpSIL_materialize_temp__n$4:class iterator &) [line 37]\n " shape="box"]
	

	 "test5" -> "test4" ;
"test4" [label="4:  DeclStmt \n   n$1=*&__range:class vec & [line 37]\n  _=*n$1:class vec  [line 37]\n  _fun_vec_end(n$1:class vec &,&0$?%__sil_tmpSIL_materialize_temp__n$0:class iterator *) [line 37]\n  _fun_iterator_iterator(&__end:class iterator *,&0$?%__sil_tmpSIL_materialize_temp__n$0:class iterator &) [line 37]\n " shape="box"]
	

	 "test4" -> "test3" ;
"test3" [label="3: + \n  " ]
	

	 "test3" -> "test7" ;
"test2" [label="2: Exit test \n  " color=yellow style=filled]
	

"test1" [label="1: Start test\nFormals: \nLocals:  __end:class iterator  0$?%__sil_tmpSIL_materialize_temp__n$0:class iterator  __begin:class iterator  0$?%__sil_tmpSIL_materialize_temp__n$4:class iterator  0$?%__sil_tmp__temp_return_n$9:class iterator  0$?%__sil_tmp__temp_construct_n$10:class iterator  0$?%__sil_tmp__temp_construct_n$11:class iterator  temp:int  value:int  __range:class vec & vector:class vec  \n   DECLARE_LOCALS(&return,&__end,&0$?%__sil_tmpSIL_materialize_temp__n$0,&__begin,&0$?%__sil_tmpSIL_materialize_temp__n$4,&0$?%__sil_tmp__temp_return_n$9,&0$?%__sil_tmp__temp_construct_n$10,&0$?%__sil_tmp__temp_construct_n$11,&temp,&value,&__range,&vector); [line 35]\n " color=yellow style=filled]
	

	 "test1" -> "test13" ;
"iterator_iterator2" [label="2: Exit iterator_iterator \n  " color=yellow style=filled]
	

"iterator_iterator1" [label="1: Start iterator_iterator\nFormals:  this:class iterator *\nLocals:  \n   DECLARE_LOCALS(&return); [line 11]\n " color=yellow style=filled]
	

	 "iterator_iterator1" -> "iterator_iterator2" ;
"vec_end3" [label="3:  Return Stmt \n   n$0=*&__return_param:class iterator * [line 29]\n  n$1=*&this:class vec * [line 29]\n  _fun_iterator_iterator(n$0:class iterator *,n$1.end_:class iterator &) [line 29]\n " shape="box"]
	

	 "vec_end3" -> "vec_end2" ;
"vec_end2" [label="2: Exit vec_end \n  " color=yellow style=filled]
	

"vec_end1" [label="1: Start vec_end\nFormals:  this:class vec * __return_param:class iterator *\nLocals:  \n   DECLARE_LOCALS(&return); [line 29]\n " color=yellow style=filled]
	

	 "vec_end1" -> "vec_end3" ;
"iterator_operator++4" [label="4:  BinaryOperatorStmt: AddAssign \n   n$2=*&this:class iterator * [line 14]\n  n$3=*n$2.val:int  [line 14]\n  *n$2.val:int =(n$3 + 1) [line 14]\n " shape="box"]
	

	 "iterator_operator++4" -> "iterator_operator++3" ;
"iterator_operator++3" [label="3:  Return Stmt \n   n$0=*&__return_param:class iterator * [line 15]\n  n$1=*&this:class iterator * [line 15]\n  _fun_iterator_iterator(n$0:class iterator *,n$1:class iterator &) [line 15]\n " shape="box"]
	

	 "iterator_operator++3" -> "iterator_operator++2" ;
"iterator_operator++2" [label="2: Exit iterator_operator++ \n  " color=yellow style=filled]
	

"iterator_operator++1" [label="1: Start iterator_operator++\nFormals:  this:class iterator * __return_param:class iterator *\nLocals:  \n   DECLARE_LOCALS(&return); [line 13]\n " color=yellow style=filled]
	

	 "iterator_operator++1" -> "iterator_operator++4" ;
"iterator_iterator3" [label="3:  Constructor Init \n   n$0=*&this:class iterator * [line 11]\n  n$1=*&__param_0:class iterator & [line 11]\n  n$2=*n$1.val:int  [line 11]\n  *n$0.val:int =n$2 [line 11]\n " shape="box"]
	

	 "iterator_iterator3" -> "iterator_iterator2" ;
"iterator_iterator2" [label="2: Exit iterator_iterator \n  " color=yellow style=filled]
	

"iterator_iterator1" [label="1: Start iterator_iterator\nFormals:  this:class iterator * __param_0:class iterator &\nLocals:  \n   DECLARE_LOCALS(&return); [line 11]\n " color=yellow style=filled]
	

	 "iterator_iterator1" -> "iterator_iterator3" ;
"vec_begin3" [label="3:  Return Stmt \n   n$0=*&__return_param:class iterator * [line 28]\n  n$1=*&this:class vec * [line 28]\n  _fun_iterator_iterator(n$0:class iterator *,n$1.begin_:class iterator &) [line 28]\n " shape="box"]
	

	 "vec_begin3" -> "vec_begin2" ;
"vec_begin2" [label="2: Exit vec_begin \n  " color=yellow style=filled]
	

"vec_begin1" [label="1: Start vec_begin\nFormals:  this:class vec * __return_param:class iterator *\nLocals:  \n   DECLARE_LOCALS(&return); [line 28]\n " color=yellow style=filled]
	

	 "vec_begin1" -> "vec_begin3" ;
"operator!=3" [label="3:  Return Stmt \n   n$0=*&i1:class iterator & [line 21]\n  n$1=*n$0.val:int  [line 21]\n  n$2=*&i2:class iterator & [line 21]\n  n$3=*n$2.val:int  [line 21]\n  *&return:_Bool =(n$1 != n$3) [line 21]\n " shape="box"]
	

	 "operator!=3" -> "operator!=2" ;
"operator!=2" [label="2: Exit operator!= \n  " color=yellow style=filled]
	

"operator!=1" [label="1: Start operator!=\nFormals:  i1:class iterator & i2:class iterator &\nLocals:  \n   DECLARE_LOCALS(&return); [line 21]\n " color=yellow style=filled]
	

	 "operator!=1" -> "operator!=3" ;
"iterator_iterator3" [label="3:  Constructor Init \n   n$0=*&this:class iterator * [line 11]\n  n$1=*&__param_0:class iterator & [line 11]\n  n$2=*n$1.val:int  [line 11]\n  *n$0.val:int =n$2 [line 11]\n " shape="box"]
	

	 "iterator_iterator3" -> "iterator_iterator2" ;
"iterator_iterator2" [label="2: Exit iterator_iterator \n  " color=yellow style=filled]
	

"iterator_iterator1" [label="1: Start iterator_iterator\nFormals:  this:class iterator * __param_0:class iterator &\nLocals:  \n   DECLARE_LOCALS(&return); [line 11]\n " color=yellow style=filled]
	

	 "iterator_iterator1" -> "iterator_iterator3" ;
"iterator_operator*3" [label="3:  Return Stmt \n   n$0=*&this:class iterator * [line 18]\n  n$1=*n$0.val:int  [line 18]\n  *&return:int =n$1 [line 18]\n " shape="box"]
	

	 "iterator_operator*3" -> "iterator_operator*2" ;
"iterator_operator*2" [label="2: Exit iterator_operator* \n  " color=yellow style=filled]
	

"iterator_operator*1" [label="1: Start iterator_operator*\nFormals:  this:class iterator *\nLocals:  \n   DECLARE_LOCALS(&return); [line 17]\n " color=yellow style=filled]
	

	 "iterator_operator*1" -> "iterator_operator*3" ;
}
