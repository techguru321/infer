build_systems/pulse_messages_kotlin/BasicJavaKotlinBoundary.java, codetoanalyze.kotlin.pulse.BasicJavaKotlinBoundary.passNullWhenDisallowedBad1(codetoanalyze.kotlin.pulse.Kotlin):void, 21, -1, ERROR, NULL_ARGUMENT, `input` could be nil (null value originating from line 20) and is passed as argument to `void Kotlin.doesNotAcceptNullFirstParam(Object)`; this function requires a non-nil argument., 
build_systems/pulse_messages_kotlin/BasicJavaKotlinBoundary.java, codetoanalyze.kotlin.pulse.BasicJavaKotlinBoundary.passNullWhenDisallowedBad2(codetoanalyze.kotlin.pulse.Kotlin):void, 33, -1, ERROR, NULL_ARGUMENT, `input2` could be nil (null value originating from line 32) and is passed as argument to `void Kotlin.doesNotAcceptNullSecondParam(Object,Object)`; this function requires a non-nil argument., 
build_systems/pulse_messages_kotlin/BasicJavaKotlinBoundary.java, codetoanalyze.kotlin.pulse.BasicJavaKotlinBoundary.passNullWhenDisallowedInterprocBad1(codetoanalyze.kotlin.pulse.Kotlin):void, 38, -1, ERROR, NULL_ARGUMENT, `input` could be nil (from the call to `BasicJavaKotlinBoundary.returnsNull()` on line 37) and is passed as argument to `void Kotlin.doesNotAcceptNullFirstParam(Object)`; this function requires a non-nil argument., 
build_systems/pulse_messages_kotlin/BasicJavaKotlinBoundary.java, codetoanalyze.kotlin.pulse.BasicJavaKotlinBoundary.passNullWhenDisallowedInterprocBad2(codetoanalyze.kotlin.pulse.Kotlin):void, 50, -1, ERROR, NULL_ARGUMENT, `input2` could be nil (from the call to `BasicJavaKotlinBoundary.returnsNull()` on line 49) and is passed as argument to `void Kotlin.doesNotAcceptNullSecondParam(Object,Object)`; this function requires a non-nil argument., 
